# What protocol to use when performing git operations. Supported values: ssh, https
git_protocol: https
# What editor gh should run when creating issues, pull requests, etc. If blank, will refer to environment.
editor:
# When to interactively prompt. This is a global config that cannot be overridden by hostname. Supported values: enabled, disabled
prompt: enabled
# A pager program to send command output to, e.g. "less". Set the value to "cat" to disable the pager.
pager:
  bat --style plain
# Aliases allow you to create nicknames for gh commands
aliases:
    co: '!id="$(gh pr list -L100 | fzf --no-preview --reverse | cut -f1)"; [ -n "$id" ] && gh pr checkout "$id"'
    #issues_milestone: '!milestone="$1";id="$(gh issue list -a $GIT_USER -R aodn/po-backlog --milestone "Iteration $milestone"| fzf --no-preview --reverse | cut -f1)";  [ -n "$id" ] && gh issue -R aodn/po-backlog view "$id" '
    issue_user_repo_view: |-
        !(
        user=$1; shift
        repo=$1; shift
        milestone=$1;
        fzf_default_opts="--no-preview --reverse --multi=1"

        if [ -z "$milestone" ]
        then
            id="$(gh issue list -a $user -R $repo | fzf $fzf_default_opts | cut -f1)"
        else
            id="$(gh issue list -a $user -R $repo --milestone "Iteration $milestone" | fzf $fzf_default_opts | cut -f1)"
        fi

        [ -n "$id" ] && gh issue -R $repo view "$id"
        )
    issues: |-
        !(case $1 in
         content)
            user="$GIT_USER"
            repo=aodn/content
            gh issue_user_repo_view $user $repo
            ;;

         issues)
            user="$GIT_USER"
            repo=aodn/issues
            gh issue_user_repo_view $user $repo
            ;;

         po_backlog_milestone)
            user="$GIT_USER"
            repo=aodn/po-backlog
            shift; milestone="$1"
            gh issue_user_repo_view $user $repo $milestone
            ;;

         po_backlog)
            user="$GIT_USER"
            repo=aodn/po-backlog
            gh issue_user_repo_view $user $repo
            ;;

         aodndata)
            user="$GIT_USER"
            repo=aodn/python-aodndata
            gh issue_user_repo_view $user $repo
            ;;

         data_services)
            user="$GIT_USER"
            repo=aodn/data-services
            gh issue_user_repo_view $user $repo
            ;;

         *)

            echo The following commands are supported from '\e[1;31m'gh issues'\e[0m':
            echo '\t\e[1;32m'content'\e[0m' '\t list all issues for user from content repo'
            echo '\t\e[1;32m'issues'\e[0m' '\t list all issues for user from issues repo'
            echo '\t\e[1;32m'po_backlog'\e[0m' '\t list all issues for user from po_backlop repo'
            echo '\t\e[1;32m'aodndata'\e[0m' '\t list all issues for user from aodndata repo'
            echo '\t\e[1;32m'data_services'\e[0m' '\t list all issues for user from data-services repo'
            echo '\t\e[1;32m'po_backlog_milestone [VALUE]'\e[0m' '\t list all issues for user from po_backlop repo for specific milestone number'

            ;;
          esac)
