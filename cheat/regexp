///REGEXP///
echo this,isatest |grep -Po ','  ## -P perl-style regexes, -o print only what matches the pattern
^A	"A" at the beginning of a line
A$	"A" at the end of a line
A^	"A^" anywhere on a line
$A	"$A" anywhere on a line
^^	"^" at the beginning of a line
$$	"$" at the end of a line
*	0 or more occurrence of previous character.
.	To match any character
[]	Range of character
[^char]		negate of occurrence of a character set
<word>		Actual word finding
[a-z]		Match’s any single char between a to z.
[A-Z]		Match’s any single char between a to z.
[0-9]		Match’s any single char between 0 to 9.
[a-zA-Z0-9] Match’s any single character either a to z or A to Z or 0 to 9
[!@#$%^]	Match’s any ! or @ or # or $ or % or ^ character.



echo $HOSTNAME 
echo $RANDOM
echo $UID

cat /etc/passwd | sed '1,10d'  ## remove 10 first lines of file
cat /etc/passwd | sed '4,10p' #Lines starting from 4th till 10th are printed

cat /etc/passwd | sed 's/root/amrood/'
cat /etc/passwd | sed 's/root/amrood/g' ## do a global substitution
cat /etc/passwd | sed -n '/^daem/p' ## p command with n to print all the matching lines
echo '1stPattern,randometext,2ndPattern' | sed 's/\(1st.*\),\(.*\),\(2nd.*\)/\3,\2,\1/g'  ## reverse order 


head -1 test 
suffixe=`head -1 test`


http://unix.stackexchange.com/questions/139657/a-challenge-for-sed-convert-code-from-mathematica-to-matlab
$ echo 'Complex(1.3, 2.7)*Power(kappa, 2.0) + Complex(0.3, 2.0)*Power(kappa,5.0)*log(alpha)' | sed 's/Complex(\([0-9]*\.[0-9]*\), \([0-9]*\.[0-9]*\))/(\1 +i*\2)/g' | sed 's/Power(\(.*\), \([0-9]*\.[0-9]*\))/\1^\2/g' | sed 's/Power(\(.*\),\([0-9]*\.[0-9]*\))/\1^\2/g'
> (1.3 +i*2.7)*kappa^2.0 + (0.3 +i*2.0)*kappa^5.0*log(alpha)
