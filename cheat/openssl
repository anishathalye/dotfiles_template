# To create a 2048-bit private key:
openssl genrsa -out server.key 2048

# To create the Certificate Signing Request (CSR):
openssl req -new -key server.key -out server.csr

# To sign a certificate using a private key and CSR:
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt

# (The above commands may be run in sequence to generate a self-signed SSL certificate.)

# To show certificate information for a certificate signing request
openssl req -text -noout -in server.csr

# To show certificate information for generated certificate
openssl x509 -text -noout -in server.crt 

# To view certificate expiration:
echo | openssl s_client -connect <hostname>:443 2> /dev/null | \
awk '/-----BEGIN/,/END CERTIFICATE-----/' | \
openssl x509 -noout -enddate

# To create a new Private Key without a passphrase.
openssl genrsa -out www.example.com.key 4096

# To create a new password protected Private Key (Remember the passphrase)
openssl genrsa -des3 -out www.example.com.key.password 4096

# To remove the passphrase from the password protected Private Key
iopenssl rsa -in www.example.com.key.password -out www.example.com.key

# to convert a private rsa key to a private pem key
openssl rsa -in ~/.ssh/id_rsa -outform pem > id_rsa.pem

# to convert a public rsa key to a public pem key
ssh-keygen -f id_rsa -e -m pem
