# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
#if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  #source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#fi

#zmodload zsh/zprof  #debug startup time

#if [ -d "/usr/share/powerline/bindings/bash" ]; then
    #source /usr/share/powerline/bindings/bash/powerline.sh
#elif [ -d "$HOME/.vim/plugged/powerline/powerline/bindings/bash/powerline.sh" ]; then
    #source $HOME/.vim/plugged/powerline/powerline/bindings/bash/powerline.sh
#fi

source $HOME/.zshrc.common

# load different zshrc/tmux config file depending on HOSTNAME
HOSTNAME=$(hostname)
if [[ $HOSTNAME == *"aws"* ]] || [[ $HOSTNAME == *"nec"* ]] || [[ $USER == "ec2-user" ]] ; then
    source $HOME/.zshrc.ssh
    ln -sf ~/.tmux.conf.ssh ~/.tmux.conf.local
elif [[ $HOSTNAME == *"funk"* ]]; then
    source $HOME/.zshrc.bfunk
    ln -sf ~/.tmux.conf.ssh ~/.tmux.conf.local
elif [[ $HOSTNAME == *"-X202EP"* ]]; then
    source $HOME/.zshrc.bfunk
    ln -sf ~/.tmux.conf.ssh_laptop ~/.tmux.conf.local
elif [[ $USER == "ubuntu" ]]; then
    source $HOME/.zshrc.bfunk
    ln -sf ~/.tmux.conf.ssh ~/.tmux.conf.local
else
    source $HOME/.zshrc.local
    ln -sf ~/.tmux.conf.laptop ~/.tmux.conf.local
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/lbesnard/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/lbesnard/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/lbesnard/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/lbesnard/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/home/lbesnard/anaconda3/etc/profile.d/mamba.sh" ]; then
    . "/home/lbesnard/anaconda3/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# thefuck
eval $(thefuck --alias)

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
#[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh



#### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

## Load a few important annexes, without Turbo
## (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk
#zprof #debug startup time
