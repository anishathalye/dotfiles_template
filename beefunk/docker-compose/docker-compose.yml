version: "3.3"
networks:
  proxy:
    external: true
services:
###################
  mariadb:
    image:  lscr.io/linuxserver/mariadb
    container_name: mariadb
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - TZ=$TZ
      - MYSQL_DATABASE=$DB_PIWIG#O_SCHEMA,$DB_TUBESYNC_SCHEMA,$DB_WP_ELCAMINO_SCHEMA,$DB_WP_DIARY_SCHEMA,$DB_PHOTOPRISM_SCHEMA
      #- MYSQL_USER=$DB_PIWIGO_USER,$DB_TUBESYNC_USER,$DB_WP_ELCAMINO_USER,$DB_WP_DIARY_USER,$DB_PHOTOPRISM_USER
      #- MYSQL_PASSWORD=$DB_PIWIGO_PASS,$DB_TUBESYNC_PASS,$DB_WP_ELCAMINO_PASS,$DB_WP_DIARY_PASS,$DB_PHOTOPRISM_PASS
      - MYSQL_DATABASE=$DB_PIWIGO_SCHEMA
      - MYSQL_USER=$DB_PIWIGO_USER
      - MYSQL_PASSWORD=$DB_PIWIGO_PASS
    volumes:
      - $DOCKER_CONFIG_PATH/mariadb:/config
    ports:
      - 3306:3306
    restart: always
######################
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      WATCHTOWER_LABEL_ENABLE: 1
      WATCHTOWER_CLEANUP: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    command: --interval 3600
    labels:
      com.centurylinklabs.watchtower.enable: true
##################
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=${TZ}
      - UMASK=022 #optional
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/jellyfin:/config
      - ${TV_SHOWS_PATH}:/data/tvshows:ro
      - $MOVIES_PATH:/data/movies:ro
      - $MOVIES_FR_PATH:/data/movies_french:ro
      - $MOVIES_SPORT_PATH:/data/movies_adventure_sports:ro
      - $YOGA_GLO_PATH:/data/yoga_glo:ro
      - $GUITAR_VIDEOS_PATH:/data/guitar:ro
      - /dev/dri:/dev/dri #optional
    ports:
      - 8096:8096 #http
      - 8920:8920 #https
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    devices:
      - /dev/dri:/dev/dri #optional
    restart: unless-stopped
  #  networks:
  #    - proxy
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.whoami.rule: Host(`whoami.myhost.local`)
      traefik.http.routers.whoami.tls: true
      traefik.http.routers.whoami.entrypoints: websecure
###########################
  navidrome:
    image: deluan/navidrome
    container_name: navidrome
    user: $PUID_USER:$PGID_USER # should be owner of volumes
    ports:
      - "8080:4533"
    restart: unless-stopped
    environment:
      # Optional: put your config options customization here. Examples:
      ND_SCANINTERVAL: 1h
      ND_LOGLEVEL: info
      ND_SESSIONTIMEOUT: 24h
      ND_BASEURL: ""
      ND_MUSICFOLDER: "/music"
      ND_AUTOIMPORTPLAYLISTS: "true"
      ND_PLAYLISTSPATH: "playlists_navidrome"
      ND_LOGLEVEL: "debug"
      ND_LOGLEVEL: "trace"
      ND_RECENTLYADDEDBYMODTIME: "true"
      ND_LASTFM_APIKEY: $LASTFM_API
      ND_LASTFM_SECRET: $LASTFM_SECRET
      ND_SPOTIFY_ID: $SPOTIFY_ID
      ND_SPOTIFY_SECRET: $SPOTIFY_SECRET
      ND_ENABLETRANSCODINGCONFIG: "true"
      ND_ENABLEGRAVATAR: "true"
      WATCHTOWER_CLEANUP: "true"
    volumes:
      - $DOCKER_CONFIG_PATH/navidrome:/data
      - $MUSIC_PATH:/music:ro
    labels:
      com.centurylinklabs.watchtower.enable: true
##################
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    ports:
      - 13378:80
    volumes:
      - $AUDIOBOOKS_PATH:/audiobooks
      - $PODCASTS_PATH:/podcasts
      - $DOCKER_CONFIG_PATH/audiobookshelf:/config
      - $DOCKER_CONFIG_PATH/audiobookshelf_metadata>:/metadata
    labels:
      com.centurylinklabs.watchtower.enable: true
# Audiobooks
#  gonic:
    #image: sentriz/gonic:latest
    #container_name: gonic
    #environment:
      #- TZ
      #- PUID=$PUID_USER
      #- PGID=$PGID_USER
      #- WATCHTOWER_CLEANUP=true
    #expose:
      #- 80
    #ports:
      #- "4040:80"
    #volumes:
    #- $DOCKER_CONFIG_PATH/gonic:/data                # gonic db etc
    #- $AUDIOBOOKS_PATH:/music:ro    # your music
    #- $DOCKER_CONFIG_PATH/gonic/cache:/cache       # transcode / covers / etc cache dir
    #restart: unless-stopped
    #labels:
      #com.centurylinklabs.watchtower.enable: true
########################
  piwigo:
    image: lscr.io/linuxserver/piwigo:latest
    # conf of DB in www/gallery/local/config/database.inc.php
    # using pihole dns. DB is setup as hostname.domain
    # helps to make sure piwigo is always pointing to the right db
    container_name: piwigo
    environment:
      - WATCHTOWER_CLEANUP=true
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $PIWIGO_CONFIG_PATH/piwigo/config:/config
      - $PIWIGO_CONFIG_PATH/piwigo/gallery:/gallery
    ports:
      - 8282:80
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
####################
  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    depends_on:
      - mariadb
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    # Run as a specific, non-root user (see https://docs.docker.com/engine/reference/run/#user):
    user: "$PUID_USER:$PGID_USER"
    ports:
      - "2342:2342" # [server]:[container]
    environment:
      WATCHTOWER_CLEANUP: "true"
      PHOTOPRISM_ADMIN_PASSWORD: "$PHOTOPRISM_ADMIN_PASSWORD"          # PLEASE CHANGE: Your initial admin password (min 4 characters)
      PHOTOPRISM_SITE_URL: "http://$DB_HOST:2342/"  # Public URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # File size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # Improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DEBUG: "false"                      # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "false"                     # No authentication required (disables password protection)
      PHOTOPRISM_READONLY: "true"                   # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # Enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "true"              # Disables storage permission updates on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # Disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "True"           # Disables Settings in Web UI
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # Disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # Disables facial recognition
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # Disables image classification
      PHOTOPRISM_DARKTABLE_PRESETS: "true"          # Enables Darktable presets and disables concurrent RAW conversion
      PHOTOPRISM_DETECT_NSFW: "false"                # Flag photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # Allow uploads that MAY be offensive
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # Use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "$DB_HOST:$DB_PORT"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "$DB_PHOTOPRISM_SCHEMA"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "$DB_PHOTOPRISM_USER"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "$DB_PHOTOPRISM_PASS"      # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "Browse Your Life"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: "Loz"
      # Set a non-root user, group, or custom umask if your Docker environment doesn't support this natively:
      PHOTOPRISM_UID: $PUID_USER
      PHOTOPRISM_GID: $PGID_USER
      # PHOTOPRISM_UMASK: 0000
      # Enable TensorFlow AVX2 support for modern Intel CPUs (requires starting the container as root):
      # PHOTOPRISM_INIT: "tensorflow-amd64-avx2"
      # Hardware video transcoding options:
      # PHOTOPRISM_FFMPEG_BUFFERS: "64"              # FFmpeg capture buffers (default: 32)
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_v4l2m2m"    # Use Video4Linux for AVC transcoding (default: libx264)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_qsv"        # Use Intel Quick Sync Video for AVC transcoding (default: libx264)
      # PHOTOPRISM_INIT: "intel-graphics tensorflow-amd64-avx2" # Enable TensorFlow AVX2 & Intel Graphics support
      HOME: "/photoprism"
    # Optional hardware devices for video transcoding and machine learning:
    devices:
    #  - "/dev/video11:/dev/video11" # Video4Linux (h264_v4l2m2m)
      - "/dev/dri/renderD128:/dev/dri/renderD128" # Intel GPU
    #  - "/dev/dri/card0:/dev/dri/card0"
    working_dir: "/photoprism"
    volumes:
      # The *originals* folder contains your original photo and video files (- "[host folder]:/photoprism/originals"):
      - "/opt/pictures_export/:/photoprism/originals"
      # Multiple folders can be made accessible by mounting them as subfolders of /photoprism/originals:
      # - "/mnt/Family:/photoprism/originals/Family"    # [folder 1]:/photoprism/originals/[folder 1]
      # - "/mnt/Friends:/photoprism/originals/Friends"  # [folder 2]:/photoprism/originals/[folder 2]
      # You may mount an *import* folder from which files can be transferred to *originals* (optional):
      # - "~/Import:/photoprism/import"
      # Cache, session, thumbnail, and sidecar files will be created in the *storage* folder (never remove):
      - "$DOCKER_CONFIG_PATH/photoprism/storage:/photoprism/storage"
    labels:
      com.centurylinklabs.watchtower.enable: true
#
######################################
###
#####################################
#  nextcloud:
    #image: linuxserver/nextcloud
    #container_name: nextcloud
    #environment:
      #- WATCHTOWER_CLEANUP=true
      #- PUID=$PUID_USER
      #- PGID=$PGID_USER
      #- TZ=$TZ
    #labels:
      #- com.centurylinklabs.watchtower.enable=true
    #volumes:
      #- $DOCKER_CONFIG_PATH/nextcloud:/config
      #- $NEXTCLOUD_DATA_PATH:/data
    #ports:
      #- 9393:443
    #restart: unless-stopped
###################
#
#  reverse-proxy:
    ## The official v2 Traefik docker image
    #image: traefik:latest
    #container_name: traefik
    ## Enables the web UI and tells Traefik to listen to docker
    #security_opt:
      #- no-new-privileges:true
    #restart: always
    #command:
      #- --api.dashboard=true
      #- --providers.docker=true
      ##- --providers.docker.exposedbydefault=false
      #- --providers.docker.network=proxy
      #- --entrypoints.webinsecure.address=:80
      #- --entrypoints.webinsecure.http.redirections.entrypoint.to=websecure
      #- --entrypoints.webinsecure.http.redirections.entrypoint.scheme=https
      #- --entrypoints.websecure.address=:443
      #- --api.insecure=true
    #ports:
      ## The HTTP port
      #- "80:80"
      #- 443:443
      ## The Web UI (enabled by --api.insecure=true)
      #- "8087:8080"
    #volumes:
      ## So that Traefik can listen to the Docker events
      #- /var/run/docker.sock:/var/run/docker.sock
    #labels:
      #- traefik.enable=true
      #- traefik.docker.network=web
      #- traefik.http.routers.traefik.rule=Host(`$SERVER_IP`)
      #- traefik.http.routers.traefik.service=api@internal
      #- traefik.http.routers.traefik.tls=true
      #- traefik.http.routers.traefik.entrypoints=websecure
##
#  ldap-auth:
    #image: lscr.io/linuxserver/ldap-auth
    #container_name: ldap-auth
    #environment:
      #- TZ=$TZ
      ##- F#ERNETKEY= #optional
      ##- CERTFILE= #optional
      ##- KEYFILE= #optional
    #ports:
      #- 8899:8888
      #- 9900:9000
#    restart: unless-stopped
##########
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    environment:
      - WATCHTOWER_CLEANUP=true
    ports:
      - 6767:8000
      - 6263:9000
      - 9443:9433
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKER_CONFIG_PATH/portainer:/data
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
###############
  komga:
    image: gotson/komga
    container_name: komga
    volumes:
      - type: bind
        source: $DOCKER_CONFIG_PATH/komga
        target: /config
      - type: bind
        source: $COMICS_PATH/
        target: /books
        read_only: true
      - type: bind
        source: $MAGAZINES_PATH/
        target: /magazines
        read_only: true
      - type: bind
        source: $MUSIC_SHEETS_PATH/
        target: /music_sheet
        read_only: true
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
        read_only: true
    ports:
      - 9980:25600
    user: "$PUID_USER:$PGID_USER"
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx4g
      - KOMGA_LIBRARIES_SCAN_STARTUP=false
      - KOMGA_LIBRARIES_SCAN_CRON=0 0 */4 * * ?
      - WATCHTOWER_CLEANUP=true
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
##################
#  tubesync:
    #image: ghcr.io/meeb/tubesync:latest
    #container_name: tubesync
    #restart: unless-stopped
    #ports:
      #- 4848:4848
    #volumes:
      #- $DOCKER_CONFIG_PATH/tubesync-config:/config
      #- $TV_SHOWS_PATH/tubesync-downloads:/downloads
    #environment:
      #- TZ=$TZ
      #- PUID=$PUID_USER
      #- PGID=$PGID_USER
      #- WATCHTOWER_CLEANUP=true
      #- DATABASE_CONNECTION=mysql://${DB_TUBESYNC_USER}:${DB_TUBESYNC_PASS}@${DB_HOST}:${DB_PORT}/${DB_TUBESYNC_SCHEMA}
    #labels:
#      com.centurylinklabs.watchtower.enable: true
#########################
######################
# rsync server
  rsync-server:
    image: quentintin/rsync-server
    container_name: rsync-server
    volumes:
      - $HOME/.ssh/id_rsa.pub:/root/.ssh/authorized_keys
      - $PICTURES_PATH:/data/pictures:ro
      - $MOVIES_PATH:/data/movies:ro
      - $GAMES_PATH:/data/games:ro
      - $MUSIC_ROOT_PATH:/data/music:ro
      - $SELF_IMPROVEMENT_PATH:/data/self_improvement:ro
      - $EBOOKS_AUDIOBOOKS_PATH:/data/ebooks_audiobooks:ro
      - $DOCKER_CONFIG_PATH:/data/docker:ro
      - $DOCKER_CONFIG_PATH/navidrome:/data/navidrome:ro
    environment:
      PUID: $PUID_USER
      PGID: $PGID_USER
    ports:
      #- "873:873" #uncomment if want to use rsyncd
      - "9000:22"
    restart: always
#######################
# Samba
  samba:
    image: dperson/samba
    container_name: samba
    environment:
      TZ: $TZ
      PUID: $PUID_USER
      PGID: $PGID_USER
    ports:
      - "139:139/tcp"
      - "445:445/tcp"
    read_only: true
    tmpfs:
      - /tmp
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - $PICTURES_PATH:/share5
      - $PICTURES_EXPORT_PATH:/share4
      - $SELF_IMPROVEMENT_PATH:/share3:ro
    command: |
      -s "Pictures;/share5;yes;no;no;$USER;$USER;$USER;pictures ro except user"
      -s "Pictures_export;/share4;yes;no;no;$USER;$USER;$USER;pictures_export ro except user"
      -s "Self Improvement;/share3;yes;no;no;$USER;$USER;$USER;Self Improvement share ro"
      -u "$USER;$SAMBA_PASSWORD"
      -u "guest;guest"
      -g "map to guest = Bad User"
      -g "guest account = nobody"

 # filebrowser:
    #image: filebrowser/filebrowser
    #container_name: filebrowser
    #environment:
      #- PUID=$PUID_USER
      #- PGID=$PGID_USER
      #- TZ=$TZ
      #- FB_NOAUTH=False
      #- FB_BASEURL=/filebrowser
      #- FB_DATABASE=/config/filebrowser.db
      #- WATCHTOWER_CLEANUP=true
    #ports:
      #- 9295:80
    #volumes:
      #- $DOCKER_CONFIG_PATH/filebrowser/database:/database
      #- $DOCKER_CONFIG_PATH/filebrowser/config:/config
      #- $EBOOKS_AUDIOBOOKS_PATH:/srv/ebooks_audiobooks:ro
      #- $MUSIC_PATH:/srv/music:ro
      #- $MOVIES_PATH:/srv/movies:ro
      #- $SELF_IMPROVEMENT_PATH:/srv/self_improvement:ro
      #- $GAMES_PATH:/srv/games:ro
    #restart: unless-stopped
    #labels:
 #     com.centurylinklabs.watchtower.enable: true
#######################
  memos:
    image: neosmemo/memos:latest
    container_name: memos
    volumes:
      - $DOCKER_CONFIG_PATH/memos/:/var/opt/memos
    ports:
      - 5230:5230
###############
  ownfoil:
    container_name: ownfoil
    image: a1ex4/ownfoil
    volumes:
      - $SWITCH_PATH:/games
      # Uncomment if you want to edit and persist the app configuration
      #- $DOCKER_CONFIG_PATH/ownfoil2/app:/app
      #- $DOCKER_CONFIG_PATH/ownfoil2/nginx:/etc/nginx
      # - ./app:/app
      # Uncomment to setup basic auth
      #- ./nginx:/etc/nginx
    environment:
      - USERNAME=$OWNFOIL_USERNAME
      - PASSWORD=$OWNFOIL_PASSWORD
      - SAVE_ENABLED=true
    restart: unless-stopped
    ports:
      - "8001:80"
  ownfoil2:
    container_name: ownfoil2
    image: a1ex4/ownfoil:v2
    environment:
      # For write permission in config directory
      - PUID=1000
      - PGID=1000
    volumes:
      - $SWITCH_PATH:/games
      - $DOCKER_CONFIG_PATH/ownfoil2:/app/config
    ports:
      - "8465:8465"
#######################
#### jupyterlab
#  jupyter:
    #container_name: jupyter
    #image: jupyter/minimal-notebook
    #volumes:
      #- $DOCKER_CONFIG_PATH/jupyter:/jupyter
    #ports:
#      - 1002:8888
#######################
  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - SUDO_PASSWORD=password
      - PASSWORD=$CODE_SERVER_PASSWORD
      - DOCKER_MODS=linuxserver/mods:code-server-python3|linuxserver/mods:code-server-zsh
    volumes:
      - $DOCKER_CONFIG_PATH/code-server/config:/config
      - $DOCKER_CONFIG_PATH/code-server/code:/code
    ports:
      - 8443:8443
    restart: unless-stopped
#### netdata
  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: $SERVER_URL # set to fqdn of host
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PUID=$PUID_USER
      - PGID=996
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
    labels:
      com.centurylinklabs.watchtower.enable: true

  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
    ports:
      - "8033:8080" # webapp
      - "8086:8086" # influxDB admin
    volumes:
      - /run/udev:/run/udev:ro
      - $DOCKER_CONFIG_PATH/scrutiny/config:/opt/scrutiny/config
      - $DOCKER_CONFIG_PATH/scrutiny/influxdb:/opt/scrutiny/influxdb
    devices:
      - "/dev/sda"
    environment:
      - COLLECTOR_CRON_SCHEDULE="*/5 * * * *"
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
    labels:
      com.centurylinklabs.watchtower.enable: true


#### netdata
  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: $SERVER_URL # set to fqdn of host
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PUID=$PUID_USER
      - PGID=996
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
    labels:
      com.centurylinklabs.watchtower.enable: true
volumes:
  netdatalib:
  netdatacache:
###################

