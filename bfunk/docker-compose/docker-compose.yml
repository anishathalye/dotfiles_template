version: "3.3"
services:
  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - TZ=$TZ
      - MYSQL_DATABASE=$DB_PIWIGO_SCHEMA #optional
      - MYSQL_USER=$DB_PIWIGO_USER #optional
      - MYSQL_PASSWORD=$DB_PIWIGO_PASS #optional
    volumes:
      - $DOCKER_CONFIG_PATH/mariadb:/config
    ports:
      - 3306:3306
    restart: unless-stopped
##################
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - UMASK_SET=<022> #optional
    volumes:
      - $DOCKER_CONFIG_PATH/jellyfin:/config
      - ${TV_SHOWS_PATH}:/data/tvshows:ro
      - $MOVIES_PATH:/data/movies:ro
      - $MOVIES_FR_PATH:/data/movies_french:ro
      - $MOVIES_SPORT_PATH:/data/movies_adventure_sports:ro
      - $YOGA_GLO_PATH:/data/yoga_glo:ro
      - $GUITAR_VIDEOS_PATH:/data/guitar:ro
    #volumes:
      #- </path for transcoding>:/transcode #optional
    ports:
      - 8096:8096
    #ports:
    #  - 8920:8920 #optional
    devices:
      - /dev/dri:/dev/dri #optional
    restart: unless-stopped
###########################################
  airsonic:
    image: linuxserver/airsonic:latest
    container_name: airsonic
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - $DOCKER_CONFIG_PATH/airsonic:/config
      - $MUSIC_PATH:/music:ro
      - $PLAYLISTS_PATH:/playlists
      - $PODCASTS_PATH:/podcasts
    ports:
      - 8080:4040
    restart: unless-stopped
########################
# airsonic advanced
#  airsonic-advanced:
    #image: airsonicadvanced/airsonic-advanced:latest
    #container_name: airsonic-advanced
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=${TZ}
      #- JAVA_OPTS=-Xmx2g
    #volumes:
      #- $DOCKER_CONFIG_PATH/airsonic-advanced:/var/airsonic
      #- $MUSIC_PATH:/var/music:ro
      #- $PLAYLISTS_AIRSONIC_ADVANCED_PATH:/var/playlists
      #- $PODCASTS_PATH:/var/podcasts
    #ports:
      #- 8081:4040
    #restart: unless-stopped
################
#  navidrome:
    #image: deluan/navidrome:latest
    #container_name: navidrome
    ##user: 1000:1000 # should be owner of volumes
    #ports:
      #- "4533:4533"
    #restart: unless-stopped
    #environment:
      #PUID: 1000
      #PGID: 1000
      #TZ: ${TZ}
      ## Put your config options customization here
      #ND_SCANINTERVAL: 1d
      #ND_LOGLEVEL: info
      #ND_SESSIONTIMEOUT: 24h
      #ND_BASEURL: ""
    #volumes:
      #- $DOCKER_CONFIG_PATH/navidrome:/data
#      - $MUSIC_PATH:/music:ro
######################################
  calibre:
    image: linuxserver/calibre
    container_name: calibre
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      #- GUAC_USER=admin
      #- GUAC_PASS=admin
    volumes:
      - $EBOOKS_PATH:/config
      - $SERVER_PATH/share:/share
      - $SERVER_PATH/torrent:/torrent
    ports:
      - 7080:8080
      - 8081:8081
    restart: always
######################################
  calibre-web:
    image: linuxserver/calibre-web
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/calibre-web:calibre
    volumes:
      - $DOCKER_CONFIG_PATH/calibre-web:/config
      - $EBOOKS_PATH:/books:ro
    ports:
      - 8083:8083
    restart: unless-stopped
##############
#  ubooquity:
    #image: linuxserver/ubooquity
    #container_name: ubooquity
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=${TZ}
      #- MAXMEM=1024
    #volumes:
      #- $DOCKER_CONFIG_PATH/ubooquity:/config
      #- $EBOOKS_PATH:/books:ro
      #- $COMICS_PATH:/comics:ro
      #- $SERVER_PATH:/files:ro
    #ports:
      #- 2202:2202
      #- 2203:2203
#    restart: unless-stopped
#####################################
#  organizr:
    #image: linuxserver/organizr
    #container_name: organizr
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=${TZ}
    #volumes:
      #- $DOCKER_CONFIG_PATH/organizr:/config
    #ports:
      #- 1111:80
#    restart: unless-stopped
####################################
#  heimdall:
    #image: linuxserver/heimdall
    #container_name: heimdall
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=${TZ}
    #volumes:
      #- $DOCKER_CONFIG_PATH/heimdall:/config
    #ports:
      #- 1112:80
      #- 443:443
    #restart: unless-stopped
#####################################
  homer:
    image: b4bz/homer:latest
    container_name: homer
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - $DOCKER_CONFIG_PATH/homer/config.yml:/www/config.yml
      - $DOCKER_CONFIG_PATH/homer/local/assets/:/www/assets
    ports:
      - 1113:8080
    restart: unless-stopped
#####################################
#  fleet:
    #image: linuxserver/fleet
    #container_name: fleet
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- fleet_admin_authentication_type=DATABASE
      #- fleet_database_url=$DB_FLEET_URL
      #- fleet_database_username=$DB_FLEET_USER
      #- fleet_database_password=$DB_FLEET_PASS
      #- fleet_dockerhub_username=$DOCKERHUB_USER
      #- fleet_dockerhub_password=$DOCKERHUB_PASS
      #- fleet_refresh_interval=60 #optional
      #- fleet_admin_secret=$FLEET_ADMIN_SECRET#optional
      ##- fleet_admin_username=admin #optional
      ##- fleet_admin_password=secretpassword #optional
      #- fleet_skip_sync_on_startup=true #optional
    #volumes:
      #- $DOCKER_CONFIG_PATH/fleet:/config
    #ports:
      #- 9999:8080
#    restart: unless-stopped
#############################
  nextcloud:
    image: linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $DOCKER_CONFIG_PATH/nextcloud:/config
      - $NEXTCLOUD_DATA_PATH:/data
    ports:
      - 9393:443
    restart: unless-stopped
###################
#  pydio:
    #image: linuxserver/pydio
    #container_name: pydio
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=$TZ
    #volumes:
      #- $DOCKER_CONFIG_PATH/pydio:/config
      #- $SERVER_PATH:/data
    #ports:
      #- 7575:443
#    restart: unless-stopped
##################
  piwigo:
    image: linuxserver/piwigo
    container_name: piwigo
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $PIWIGO_CONFIG_PATH/piwigo:/config
    ports:
      - 8282:80
    restart: unless-stopped
####################
  glance:
    image: nicolargo/glances:latest-alpine
    container_name: glances
    restart: always
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "GLANCES_OPT=-w"
    ports:
      - 61208:61208
###############
  #lidarr:
    #image: linuxserver/lidarr
    #container_name: lidarr
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=$TZ
      #- UMASK_SET=022 #optional
    #volumes:
      #- $DOCKER_CONFIG_PATH/lidarr:/config
      #- $MUSIC_PATH:/music:ro
      #- $TORRENT_PATH/LIDARR_DL:/downloads
      #- $TORRENT_PATH/completed:/data/completed
    #ports:
      #- 8686:8686
#    restart: unless-stopped
#############
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/radarr:/config
      - $MOVIES_ENG_PATH:/movies
      - $TORRENT_PATH/completed:/downloads
      - $TORRENT_PATH/completed:/data/completed
    ports:
      - 7878:7878
    restart: unless-stopped
##########################
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/sonarr:/config
      - ${TV_SHOWS_PATH}:/tv
      - $TORRENT_PATH/completed:/downloads
      - $TORRENT_PATH/completed:/data/completed
    ports:
      - 8989:8989
    restart: unless-stopped
#####################
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - RUN_OPTS=run options here #optional
    volumes:
      - $DOCKER_CONFIG_PATH/jackett:/config
      - $TORRENT_PATH:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
####################
  booksonic-air:
    image: ghcr.io/linuxserver/booksonic-air
    container_name: booksonic-air
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      #- CONTEXT_PATH=url-base
    volumes:
      - $DOCKER_CONFIG_PATH/booksonic:/config
      - $AUDIOBOOKS_PATH:/audiobooks:ro
      - $PODCASTS_PATH:/podcasts:ro
      #- /path/to/othermedia:/othermedia
    ports:
      - 4040:4040
    restart: unless-stopped
################
  pyload:
    image: linuxserver/pyload
    container_name: pyload
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $DOCKER_CONFIG_PATH/pyload:/config
      - $TORRENT_PATH/PYLOAD:/downloads
    ports:
      - 8000:8000
      - 7227:7227 #optional
    restart: unless-stopped
######################
  headphones:
    image: linuxserver/headphones
    container_name: headphones
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $DOCKER_CONFIG_PATH/headphones:/config
      - $TORRENT_PATH/MUSIC:/downloads
      - $MUSIC_PATH:/music:ro
    ports:
      - 8181:8181
    restart: unless-stopped
#######################
  transmission:
   image: haugene/transmission-openvpn
   container_name: transmission
   cap_add:
     - NET_ADMIN
   devices:
     - /dev/net/tun
   restart: always
   ports:
     - "9091:9091"
     - "8888:8888"
   dns:
     - 8.8.8.8
     - 8.8.4.4
   volumes:
     - /etc/localtime:/etc/localtime:ro
     - $TORRENT_PATH:/data
   environment:
     - CREATE_TUN_DEVICE=true
     - WEBPROXY_ENABLED=false
     - TRANSMISSION_WEB_UI=transmission-web-control
     - TRANSMISSION_INCOMPLETE_DIR=/data/transmission/incomplete
     - TRANSMISSION_INCOMPLETE_DIR_ENABLED=true
     - TRANSMISSION_BLOCKLIST_ENABLED=true
     - TRANSMISSION_BLOCKLIST_URL=$TRANSMISSION_BLOCKLIST_URL
     - OPENVPN_PROVIDER=PIA
     - OPENVPN_USERNAME=$PIA_USERNAME
     - OPENVPN_PASSWORD=$PIA_PASSWORD
     - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
     - LOCAL_NETWORK=$LOCAL_NETWORK
   restart: unless-stopped
#########
  apaxy:
    image: apaxy
    container_name: apaxy
    build:
      context: apaxy
      args:
        apaxyPath: ''
    ports:
        - '3321:8080'
    volumes:
      - $SERVER_PATH:/usr/local/apache2/htdocs/share/:ro
    image: apax
    restart: unless-stopped
###############
#### ifm ; run first: docker-compose build ifm
#  ifm:
    #image: ifm
    #container_name: ifm
    #build:
      #context: ifm
      #dockerfile: Dockerfile
    #ports:
        #- 3323:80
    #environment:
      #- IFM_DOCKER_UID=1000
      #- IFM_DOCKER_GID=100
      #- IFM_API_CHMOD=0
      #- IFM_API_COPYMOVE=0
      #- IFM_API_CREATEDIR=0
      #- IFM_API_CREATEFILE=0
      #- IFM_API_EDIT=0
      #- IFM_API_DELETE=0
      #- IFM_API_EXTRACT=0
      #- IFM_API_RENAME=0
      #- IFM_API_ZIPNLOAD=1
      #- IFM_API_DOWNLOAD=1
    #volumes:
#      - $SERVER_PATH:/var/www:ro
#  explorer:
    #image: explorer
    #container_name: explorer
    #build:
      #context: explorer
      #dockerfile: Dockerfile
    #volumes:
      #- $DOCKER_CONFIG_PATH/explorer:/opt/explorer
      #- $SERVER_PATH:/server_data:ro
    #ports:
#      - 4859:4859
#############
# to store icons for organizr help page
  tecmint-web:
    container_name: web-server
    image: httpd:2.4
    ports:
      - 9090:80
    volumes:
      - $DOCKER_CONFIG_PATH/howto:/usr/local/apache2/htdocs/
    restart: unless-stopped
###############
#  diskover:
    #image: linuxserver/diskover
    #container_name: diskover
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=$TZ
      ##- REDIS_HOST=redis
      ##- REDIS_PORT=6379
      ##- ES_HOST=elasticsearch
      ##- ES_PORT=9200
      ##- ES_USER=elastic
      ##- ES_PASS=changeme
      #- RUN_ON_START=true
      ##- USE_CRON=true
    #volumes:
      #- $DOCKER_CONFIG_PATH/diskrover:/config
      #- $SERVER_PATH:/data:ro
    #ports:
      #- 7070:80
      #- 9181:9181
      #- 9988:9999
    #restart: unless-stopped
    #depends_on:
      #- elasticsearch
      #- redis
  #elasticsearch:
    #container_name: elasticsearch
    #image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
    #volumes:
      #- ${DOCKER_CONFIG_PATH}/elasticsearch/data:/usr/share/elasticsearch/data
    #environment:
      #- bootstrap.memory_lock=true
      #- "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
    #ulimits:
      #memlock:
        #soft: -1
        #hard: -1
  #redis:
    #container_name: redis
    #image: redis:alpine
    #volumes:
#      - ${DOCKER_CONFIG_PATH}/redis:/data
#####################
# tinymediamanager - filebot replacement
  tinymediamanager:
    image: romancin/tinymediamanager:latest
    container_name: tinymediamanager
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $DOCKER_CONFIG_PATH/tmm:/config
      - $TORRENT_PATH/completed:/media
    ports:
      - 5700:5800
      - 5900:5900
    restart: unless-stopped
################
####### notes
  codimd:
    image: linuxserver/codimd:1.5.0-ls27
    container_name: codimd
    restart: always
    depends_on:
      - mariadb
    volumes:
      - $DOCKER_CONFIG_PATH/codim:/config
    environment:
      - DB_HOST=$DB_HOST
      - DB_USER=$DB_CODIMD_USER
      - DB_PASS=$DB_CODIMD_PASS
      - DB_NAME=$DB_CODIMD_SCHEMA
      - DB_PORT=$DB_PORT
      - PGID=1000
      - PUID=1000
      - TZ=$TZ
    ports:
      - "3000:3000"
################
########## get server ip to duckdns
  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    environment:
      - PUID=1000 #optional
      - PGID=1000 #optional
      - TZ=$TZ
      - SUBDOMAINS=$DUCKDNS_DOMAIN
      - TOKEN=$DUCKDNS_TOKEN
      - LOG_FILE=false #optional
    volumes:
      - $DOCKER_CONFIG_PATH/duckdns:/config #optional
    restart: unless-stopped
##############
#  lazylibrarian:
    #image: linuxserver/lazylibrarian
    #container_name: lazylibrarian
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=$TZ
      #- DOCKER_MODS=linuxserver/calibre-web:calibre #optional
    #volumes:
      #- $DOCKER_CONFIG_PATH/lazylibrarian:/config
      #- $TORRENT_PATH/EBOOKS:/downloads
      #- $EBOOKS_PATH:/books
    #ports:
      #- 5299:5299
#    restart: unless-stopped
################
#  firefox:
    #image: jlesage/firefox
    #container_name: firefox
    #ports:
      #- 5800:5800
    #volumes:
      #- $DOCKER_CONFIG_PATH/firefox:/config:rw
    #restart: always
###########################
# Grafana influx telegraf
##########################
#  influxdb:
    #image: influxdb:latest
    #container_name: influxdb
    #ports:
      #- 8084:8083
      #- 8086:8086
      #- 8090:8090
    #environment:
      #- TZ=$TZ
      #- INFLUXDB_DATA_ENGINE=tsm1
      #- INFLUXDB_REPORTING_DISABLED=false
      #- INFLUXDB_DB=$INFLUXDB_DB
      #- INFLUXDB_USER=$INFLUXDB_USER
      #- INFLUXDB_USER_PASSWORD=$INFLUXDB_USER_PASSWORD
      #- INFLUXDB_ADMIN_PASSWORD=$INFLUXDB_ADMIN_PASSWORD
      #- INFLUXDB_ADMIN_USER=$INFLUXDB_ADMIN_USER
    #volumes:
      #- $DOCKER_CONFIG_PATH/influxdb/data:/var/lib/influxdb

  #telegraf:
    #image: telegraf:latest
    #container_name: telegraf
    #links:
      #- influxdb
    #volumes:
      #- ./telegraf.conf:/etc/telegraf/telegraf.conf:ro

  #grafana:
    #image: grafana/grafana
    #container_name: grafana
    #ports:
      #- 3001:3000
    #environment:
      #- TZ=$TZ
      #- GF_SERVER_ROOT_URL=$SERVER_URL
      #- GF_SECURITY_ADMIN_PASSWORD=$GF_PASS
      #- GF_INSTALL_PLUGINS=grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource
    #user: '0'
    #links:
      #- influxdb
    #volumes:
      #- $DOCKER_CONFIG_PATH/grafana:/var/lib/grafana
    #restart: unless-stopped
#####################
### Wallabag
  wallabag:
    image: wallabag/wallabag
    container_name: wallabag
    ports:
      - 3637:80
    volumes:
      - $DOCKER_CONFIG_PATH/wallabag/var/www/wallabag/data:/var/www/wallabag/data
      - $DOCKER_CONFIG_PATH/wallabag/opt/wallabag/images:/var/www/wallabag/web/assets/images
    environment:
      - TZ=$TZ
      - SYMFONY__ENV__DOMAIN_NAME=$SERVER_URL:3637
    restart: unless-stopped
    links:
      - redis
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379
    restart: unless-stopped
##########
  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - 6767:8000
      - 6263:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKER_CONFIG_PATH/portainer:/data portainer/portainer
    restart: unless-stopped
###########
  wordpress:
    image: wordpress:latest
    container_name: wordpress
    ports:
       - 5555:80
    restart: always
    depends_on:
      - mariadb
    environment:
      WORDPRESS_DB_HOST: $DB_WP_URL
      WORDPRESS_DB_USER: $DB_WP_USER
      WORDPRESS_DB_PASSWORD: $DB_WP_PASS
      WORDPRESS_DB_NAME: $DB_WP_SCHEMA
    volumes:
       - $DOCKER_CONFIG_PATH/wordpress:/var/www/html
#########################
### bazarr
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/bazarr:/config
      - $MOVIES_ENG_PATH:/movies
      - $TV_SHOWS_PATH:/tv
    ports:
      - 6768:6767
    restart: unless-stopped
###############
  komga:
    image: gotson/komga
    container_name: komga
    volumes:
      - type: bind
        source: $DOCKER_CONFIG_PATH/komga
        target: /config
      - type: bind
        source: $COMICS_PATH/
        target: /books
        read_only: true
      - type: bind
        source: $MAGAZINES_PATH/
        target: /magazines
        read_only: true
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
        read_only: true
    ports:
      - 9980:8080
    user: "1000:1000"
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx2g
    restart: unless-stopped
########################
#### h5ai - file browser
  #h5ai:
    #image: awesometic/h5ai
    #container_name: h5ai
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=$TZ
    #volumes:
      #- $DOCKER_CONFIG_PATH/h5ai:/config
      #- $SERVER_PATH:/h5ai:ro
    #ports:
      #- 4344:80
#    restart: unless-stopped
#########################
#### wireguard
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - SERVERURL=${DUCKDNS_DOMAIN}.duckdns.org
      - SERVERPORT=53 #optional
      - PEERS=2 #optional
      - PEERDNS=auto #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/wireguard/config:/config
      - /lib/modules:/lib/modules
    ports:
      - 53:51820/udp
    #sysctls:
      #- net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
################3
##### droppy
  #droppy:
    #image: silverwind/droppy
    #container_name: droppy
    #ports:
      #- 9297:8989
    #volumes:
      #- $DOCKER_CONFIG_PATH/droppy:/config
      #- $SERVER_PATH:/files:ro
#    restart: unless-stopped
####################
##### filebrowser
  #filebrowser:
    #image: hurlenko/filebrowser
    #container_name: filebrowser
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=$TZ
      #- FB_NOAUTH=True
      #- FB_BASEURL=/filebrowser
      #- FB_DATABASE=/config/filebrowser.db
    #ports:
      #- 9294:8080
    #volumes:
      #- $DOCKER_CONFIG_PATH/filebrowser:/config
      #- $SERVER_PATH:/data:ro
#    restart: always
#######################
  filebrowser2:
    image: filebrowser/filebrowser
    container_name: filebrowser2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - FB_NOAUTH=True
      - FB_BASEURL=/filebrowser
      - FB_DATABASE=/config/filebrowser.db
    ports:
      - 9295:80
    volumes:
      - $DOCKER_CONFIG_PATH/filebrowser2/filebrowser.db:/config/filebrowser.db
      - $DOCKER_CONFIG_PATH/filebrowser2/.filebrowser.json:/.filebrowser.json
      - $EBOOKS_AUDIOBOOKS_PATH:/srv/ebooks_audiobooks:ro
      - $MUSIC_PATH:/srv/music:ro
      - $MOVIES_PATH:/srv/movies:ro
      - $TORRENT_PATH:/srv/torrent:ro
      - $SELF_IMPROVEMENT_PATH:/srv/self_improvement:ro
      - $GAMES_PATH:/srv/games:ro
      - $SHARE_PATH:/srv/share
    restart: always
#######################
#
#### netdata
  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: $SERVER_URL # set to fqdn of host
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PUID=1000
      - PGID=996
      - TZ=$TZ
volumes:
  netdatalib:
  netdatacache:

###################

