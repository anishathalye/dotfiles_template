version: "3.3"
networks:
  frontend:
    ipam:
      config:
        - subnet: 172.20.0.0/24
services:
  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - TZ=$TZ
      - MYSQL_DATABASE=$DB_PIWIGO_SCHEMA
      - MYSQL_USER=$DB_PIWIGO_USER
      - MYSQL_PASSWORD=$DB_PIWIGO_PASS
    volumes:
      - $DOCKER_CONFIG_PATH/mariadb:/config
    ports:
      - 3306:3306
    networks:
        frontend:
            ipv4_address: 172.20.0.17
    restart: unless-stopped
##################
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - UMASK=022 #optional
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
    volumes:
      - $DOCKER_CONFIG_PATH/jellyfin:/config
      - ${TV_SHOWS_PATH}:/data/tvshows:ro
      - $MOVIES_PATH:/data/movies:ro
      - $MOVIES_FR_PATH:/data/movies_french:ro
      - $MOVIES_SPORT_PATH:/data/movies_adventure_sports:ro
      - $YOGA_GLO_PATH:/data/yoga_glo:ro
      - $GUITAR_VIDEOS_PATH:/data/guitar:ro
      - /dev/dri:/dev/dri #optional
    ports:
      - 8096:8096
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    devices:
      - /dev/dri:/dev/dri #optional
    restart: unless-stopped
###########################################
#  airsonic:
    #image: linuxserver/airsonic:latest
    #container_name: airsonic
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=${TZ}
    #volumes:
      #- $DOCKER_CONFIG_PATH/airsonic:/config
      #- $MUSIC_PATH:/music:ro
      #- $PLAYLISTS_PATH:/playlists
      #- $PODCASTS_PATH:/podcasts
    #devices:
      #- /dev/snd:/dev/snd #optional
    #ports:
      #- 8082:4040
#    restart: unless-stopped
########################
# airsonic advanced
#  airsonic-advanced:
    #image: airsonicadvanced/airsonic-advanced:latest
    #container_name: airsonic-advanced
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=${TZ}
      #- JAVA_OPTS=-Xmx2g
    #volumes:
      #- $DOCKER_CONFIG_PATH/airsonic-advanced:/var/airsonic
      #- $MUSIC_PATH:/music:ro
      ##- $PLAYLISTS_AIRSONIC_ADVANCED_PATH:/playlists
      #- $PLAYLISTS_PATH:/playlists
      #- $PODCASTS_PATH:/podcasts
    #devices:
      #- /dev/snd:/dev/snd #optional
    #ports:
      #- 8080:4040
#    restart: unless-stopped
#############################
#  sonic for music and audiobooks in go using less RAM
  navidrome:
    #image: deluan/navidrome:latest
    image: deluan/navidrome
    container_name: navidrome
    user: 1000:1000 # should be owner of volumes
    ports:
      - "8080:4533"
    restart: unless-stopped
    environment:
      # Optional: put your config options customization here. Examples:
      ND_SCANINTERVAL: 1h
      ND_LOGLEVEL: info
      ND_SESSIONTIMEOUT: 24h
      ND_BASEURL: ""
      ND_AUTOIMPORTPLAYLISTS: "true"
      ND_LOGLEVEL: "trace"
      ND_RECENTLYADDEDBYMODTIME: "true"
      ND_LASTFM_APIKEY: $LASTFM_API
      ND_LASTFM_SECRET: $LASTFM_SECRET
      ND_SPOTIFY_ID: $SPOTIFY_ID
      ND_SPOTIFY_SECRET: $SPOTIFY_SECRET
      ND_ENABLETRANSCODINGCONFIG: "true"
      ND_ENABLEGRAVATAR: "true"
    volumes:
      - $DOCKER_CONFIG_PATH/navidrome:/data
      - $MUSIC_PATH:/music:ro
##################
# Audiobooks
  gonic:
    image: sentriz/gonic:latest
    container_name: gonic
    environment:
    - TZ
    # optionally, see more env vars below
    expose:
    - 80
    ports:
      - "4040:80"
    volumes:
    - $DOCKER_CONFIG_PATH/gonic:/data                # gonic db etc
    - $AUDIOBOOKS_PATH:/music:ro    # your music
    - $DOCKER_CONFIG_PATH/gonic/cache:/cache       # transcode / covers / etc cache dir
    restart: unless-stopped
######################################
  calibre:
    image: linuxserver/calibre
    container_name: calibre
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      #- GUAC_USER=admin
      #- GUAC_PASS=admin
    volumes:
      - $EBOOKS_PATH:/config
      - $SHARE_PATH:/share
      - $TORRENT_PATH:/torrent
    ports:
      - 7080:8080
      - 8081:8081
    restart: always
######################################
  calibre-web:
    image: linuxserver/calibre-web
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/calibre-web:calibre
    volumes:
      - $DOCKER_CONFIG_PATH/calibre-web:/config
      - $EBOOKS_PATH:/books:ro
    ports:
      - 8083:8083
    restart: unless-stopped
#####################################
  homer:
    image: b4bz/homer:latest
    container_name: homer
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - $DOCKER_CONFIG_PATH/homer/config.yml:/www/config.yml
      - $DOCKER_CONFIG_PATH/homer/local/assets/:/www/assets
    ports:
      - 1113:8080
    restart: unless-stopped
#####################################
  nextcloud:
    image: linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $DOCKER_CONFIG_PATH/nextcloud:/config
      - $NEXTCLOUD_DATA_PATH:/data
    ports:
      - 9393:443
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    restart: unless-stopped
##################
  piwigo:
    image: linuxserver/piwigo
    # conf of DB in www/gallery/local/config/database.inc.php. using static IP
    # helps to make sure piwigo is always pointing to the right db
    container_name: piwigo
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $PIWIGO_CONFIG_PATH/piwigo:/config
    ports:
      - 8282:80
    #networks:
        #frontend:
    #        ipv4_address: 172.20.0.18
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    restart: unless-stopped
###################
  php_piwigo_slideshow:
    container_name: php_piwigo_slideshow
    image: php:7.4-apache
    ports:
      - 5671:80
    volumes:
      - $DOCKER_CONFIG_PATH/php_piwigo_slideshow:/var/www/html/
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
####################
  glance:
    image: nicolargo/glances:latest-alpine
    container_name: glances
    restart: always
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "GLANCES_OPT=-w"
    ports:
      - 61208:61208
###############
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/lidarr:/config
      - $MUSIC_PATH:/music
      - $TORRENT_PATH:/data
      - $TORRENT_PATH/LIDARR_DL:/data/LIDARR_DL
    ports:
      - 8686:8686
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    restart: unless-stopped
#############
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK=022 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/radarr:/config
      - $MOVIES_ENG_PATH:/movies
      - $TORRENT_PATH/completed:/downloads
      - $TORRENT_PATH/completed:/data/completed
    ports:
      - 7878:7878
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    restart: unless-stopped
#######################
  radarr_fr:
    image: linuxserver/radarr
    container_name: radarr_fr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK=022 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/radarr_fr:/config
      - $MOVIES_FR_PATH:/movies
      - $TORRENT_PATH/completed:/downloads
      - $TORRENT_PATH/completed:/data/completed
    ports:
      - 7879:7878
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    restart: unless-stopped
##########################
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK=022 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/sonarr:/config
      - ${TV_SHOWS_PATH}:/tv
      - $TORRENT_PATH/completed:/downloads
      - $TORRENT_PATH/completed:/data/completed
    ports:
      - 8989:8989
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    restart: unless-stopped
#####################
# Handbrake
  handbrake:
    image: jlesage/handbrake
    container_name: handbrake
    volumes:
      - $DOCKER_CONFIG_PATH/handbrake:/config:rw
      - $GUITAR_VIDEOS_PATH:/videos:rw
    ports:
      - "5800:5800"
#
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - AUTO_UPDATE=true #optional
      #- RUN_OPTS=run options here #optional
    volumes:
      - $DOCKER_CONFIG_PATH/jackett:/config
      - $TORRENT_PATH:/downloads
    ports:
      - 9117:9117
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    restart: unless-stopped
####################
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    ports:
      - 8191:8191
    restart: unless-stopped
###############
# flexget
 # flexget:
    #image: wiserain/flexget
    #container_name: flexget
    #environment:
      #- PUID=1000
      #- GUID=1000
      #- TZ=$TZ
      #- FG_WEBUI_PASSWD=dontstealthepwd
    #ports:
      #- 5050:5050
    #volumes:
      #- $DOCKER_CONFIG_PATH/flexget:/config
#################
  #syncthing:
    #image: ghcr.io/linuxserver/syncthing
    #container_name: syncthing
    #hostname: syncthing #optional
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=Europe/London
    #volumes:
      #- $DOCKER_CONFIG_PATH/syncthing:/config
      #- /export/share/share:/data1
    #ports:
      #- 8384:8384
      #- 22000:22000/tcp
      #- 22000:22000/udp
      #- 21027:21027/udp
    #restart: unless-stopped
##
#
  pyload:
    image: linuxserver/pyload
    container_name: pyload
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $DOCKER_CONFIG_PATH/pyload:/config
      - $TORRENT_PATH/PYLOAD:/downloads
    ports:
      - 8000:8000
      - 7227:7227 #optional
    restart: unless-stopped
#######################
  transmission:
   image: haugene/transmission-openvpn
   container_name: transmission
   cap_add:
     - NET_ADMIN
   devices:
     - /dev/net/tun
   restart: always
   ports:
     - "9091:9091"
     - "8888:8888"
   dns:
     - 8.8.8.8
     - 8.8.4.4
   volumes:
     - /etc/localtime:/etc/localtime:ro
     - $TORRENT_PATH:/data
   environment:
     - CREATE_TUN_DEVICE=true
     - WEBPROXY_ENABLED=false
     - TRANSMISSION_WEB_UI=transmission-web-control
     - TRANSMISSION_INCOMPLETE_DIR=/data/transmission/incomplete
     - TRANSMISSION_INCOMPLETE_DIR_ENABLED=true
     - TRANSMISSION_BLOCKLIST_ENABLED=true
     - TRANSMISSION_BLOCKLIST_URL=$TRANSMISSION_BLOCKLIST_URL
     - OPENVPN_PROVIDER=PIA
     - OPENVPN_USERNAME=$PIA_USERNAME
     - OPENVPN_PASSWORD=$PIA_PASSWORD
     - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
     - LOCAL_NETWORK=$LOCAL_NETWORK
   restart: unless-stopped
#########
  apaxy:
    image: apaxy
    container_name: apaxy
    build:
      context: apaxy
      args:
        apaxyPath: ''
    ports:
        - '3321:8080'
    volumes:
      - $SERVER_PATH:/usr/local/apache2/htdocs/share/:ro
    image: apax
    restart: unless-stopped
#############
# to store icons for organizr help page
  tecmint-web:
    container_name: web-server
    image: httpd:2.4
    ports:
      - 1021:80
    volumes:
      - $DOCKER_CONFIG_PATH/howto:/usr/local/apache2/htdocs/
    restart: unless-stopped
#####################
## tinymediamanager - filebot replacement
 # tinymediamanager:
    #image: romancin/tinymediamanager:latest
    #container_name: tinymediamanager
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=$TZ
    #volumes:
      #- $DOCKER_CONFIG_PATH/tmm:/config
      #- $TORRENT_PATH/completed:/media
    #ports:
      #- 5700:5800
      #- 5900:5900
 #   restart: unless-stopped
################
####### notes
  hedgedoc:
    image: ghcr.io/linuxserver/hedgedoc:latest
    container_name: hedgedoc
    restart: always
    depends_on:
      - mariadb
    volumes:
      - $DOCKER_CONFIG_PATH/codimd:/config
    environment:
      - DB_HOST=$DB_HOST
      #- DB_HOST=172.20.0.17
      - DB_USER=$DB_CODIMD_USER
      - DB_PASS=$DB_CODIMD_PASS
      - DB_NAME=$DB_CODIMD_SCHEMA
      - DB_PORT=$DB_PORT
      - PGID=1000
      - PUID=1000
      - TZ=$TZ
        # the following part is commented out. since we use the pihole DNS to
        # resolve the hostname, we don't need to be on the same sub network as
        # mariadb
#    networks:
        #frontend:
#            ipv4_address: 172.20.0.15
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    restart: unless-stopped
    ports:
      - "3000:3000"
################
########## get server ip to duckdns
  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    dns: 1.1.1.1
    environment:
      - PUID=1000 #optional
      - PGID=1000 #optional
      - TZ=$TZ
      - SUBDOMAINS=$DUCKDNS_DOMAIN
      - TOKEN=$DUCKDNS_TOKEN
      - LOG_FILE=false #optional
    volumes:
      - $DOCKER_CONFIG_PATH/duckdns:/config #optional
    restart: unless-stopped
#####################
### Wallabag
  wallabag:
    image: wallabag/wallabag
    container_name: wallabag
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    ports:
      - 3637:80
    volumes:
      - $DOCKER_CONFIG_PATH/wallabag/var/www/wallabag/data:/var/www/wallabag/data
      - $DOCKER_CONFIG_PATH/wallabag/opt/wallabag/images:/var/www/wallabag/web/assets/images
    environment:
      - TZ=$TZ
      - SYMFONY__ENV__DOMAIN_NAME=$SERVER_URL:3637
      - SYMFONY__ENV__DATABASE_HOST=172.20.0.17
    restart: unless-stopped
    links:
      - redis
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379
    restart: unless-stopped
##########
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - 6767:8000
      - 6263:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKER_CONFIG_PATH/portainer:/data portainer/portainer
    restart: unless-stopped
###########
  wordpress:
    image: wordpress:latest
    container_name: wordpress
    ports:
       - 5555:80
    restart: always
    depends_on:
      - mariadb
    environment:
      WORDPRESS_DB_HOST: $DB_WP_URL
      WORDPRESS_DB_USER: $DB_WP_USER
      WORDPRESS_DB_PASSWORD: $DB_WP_PASS
      WORDPRESS_DB_NAME: $DB_WP_SCHEMA
  #  networks:
        #frontend:
  #          ipv4_address: 172.20.0.5
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    restart: unless-stopped
    volumes:
       - $DOCKER_CONFIG_PATH/wordpress:/var/www/html
###########
  wordpress_diary:
    image: wordpress:latest
    container_name: wordpress_diary
    ports:
       - 5556:80
    restart: always
    depends_on:
      - mariadb
    environment:
      WORDPRESS_DB_HOST: $DB_WP_URL
      WORDPRESS_DB_USER: $DB_WP_USER
      WORDPRESS_DB_PASSWORD: $DB_WP_PASS
      WORDPRESS_DB_NAME: $DB_WP_DIARY_SCHEMA
    networks:
        frontend:
            ipv4_address: 172.20.0.6
    restart: unless-stopped
    volumes:
       - $DOCKER_CONFIG_PATH/wordpress_diary:/var/www/html

#########################
### bazarr
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/bazarr:/config
      - $MOVIES_ENG_PATH:/movies
      - $TV_SHOWS_PATH:/tv
    ports:
      - 6768:6767
    restart: unless-stopped
###############
  komga:
    image: gotson/komga
    container_name: komga
    volumes:
      - type: bind
        source: $DOCKER_CONFIG_PATH/komga
        target: /config
      - type: bind
        source: $COMICS_PATH/
        target: /books
        read_only: true
      - type: bind
        source: $MAGAZINES_PATH/
        target: /magazines
        read_only: true
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
        read_only: true
    ports:
      - 9980:8080
    user: "1000:1000"
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx4g
    restart: unless-stopped
#########################
#### wireguard
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - SERVERURL=${DUCKDNS_DOMAIN}.duckdns.org
      - SERVERPORT=51820 #optional
      - PEERS=moto_loz,bfunk #optional
      - PEERDNS=auto #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/wireguard/config:/config
      - /lib/modules:/lib/modules
      - /usr/src/:/usr/src
    ports:
      - 51820:51820/udp
    #sysctls:
      #- net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

#### wireguard
  wireguard2:
    image: linuxserver/wireguard
    container_name: wireguard2
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - SERVERURL=${DUCKDNS_DOMAIN}.duckdns.org
      - SERVERPORT=51821 #optional
      - PEERS=$WG2_PEERS #optional
      - PEERDNS=$PIHOLE_DOCKER_SUB_IP_DNS #using pihole docker, default port is 53, which is dsn by default # docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' pihole
      - INTERNAL_SUBNET=10.13.13.0 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/wireguard2/config:/config
      - /lib/modules:/lib/modules
      - /usr/src/:/usr/src
    ports:
      - 51821:51820/udp
    #sysctls:
      #- net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

############################
# doc on https://github.com/kylemanna/docker-openvpn/blob/master/docs/docker-compose.md
  openvpn:
    cap_add:
     - NET_ADMIN
    image: kylemanna/openvpn
    container_name: openvpn
    ports:
     - "1194:1194/udp"
    restart: always
    volumes:
     - $DOCKER_CONFIG_PATH/openvpn-data/conf:/etc/openvpn
######################
### pihole
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "455:80/tcp"
    environment:
      TZ: $TZ
      WEBPASSWORD: $PIHOLE_PWD
    # Volumes store your data between container upgrades
    volumes:
      #- './etc-pihole/:/etc/pihole/'
      #- './etc-dnsmasq.d/:/etc/dnsmasq.d/'
      - $DOCKER_CONFIG_PATH/pihole/etc/pihole/:/etc/pihole/
      - $DOCKER_CONFIG_PATH/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
#######################
# rsync serve
  rsync-server:
    image: axiom/rsync-server
    container_name: rsync-server
    volumes:
      - $HOME/.ssh/id_rsa.pub:/root/.ssh/authorized_keys
      - $SERVER_PATH:/data:ro
    #environment:
      #- USERNAME=nouser
      #- PASSWORD=nopass
    ports:
      #- "873:873" #uncomment if want to use rsyncd
      - "9000:22"
#######################
# Samba
  samba:
    image: dperson/samba
    container_name: samba
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
    ports:
      #- "137:137/udp"
      #- "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    read_only: true
    tmpfs:
      - /tmp
    restart: unless-stopped
    stdin_open: true
    tty: true
    volumes:
      - $EBOOKS_AUDIOBOOKS_PATH:/share1:ro
      - $GAMES_PATH:/share2:ro
      - $MOVIES_PATH:/share3:ro
      - $MUSIC_PATH:/share4:ro
      - $PICTURES_PATH:/share5
      - $SHARE_PATH:/share6
      - $TORRENT_PATH:/share7:ro
      - $SELF_IMPROVEMENT_PATH:/share8:ro
      - $PODCASTS_PATH:/share9:ro
    command: |
      -s "Ebooks;/share1;yes;yes;yes;all;none;$USER;ebooks share ro"
      -s "Games;/share2;yes;yes;yes;all;none;$USER;games share ro"
      -s "Movies;/share3;yes;yes;yes;all;none;$USER;movies share ro"
      -s "Music;/share4;yes;yes;yes;all;none;$USER;music share ro"
      -s "Pictures;/share5;yes;no;no;$USER;$USER;$USER;pictures ro except user"
      -s "Shared;/share6;yes;no;yes;guest,$USER;guest,$USER;guest,$USER;shared rw"
      -s "Torrent;/share7;yes;yes;yes;all;none;$USER;torrent share ro"
      -s "Self Improvement;/share8;yes;yes;yes;all;none;$USER;Self Improvement share ro"
      -s "Podcasts;/share9;yes;yes;yes;all;none;$USER;Podcasts share ro"
      -u "$USER;$SAMBA_PASSWORD"
      -u "guest;guest"
      -g "map to guest = Bad User"
      -g "guest account = nobody"

#######################
  filebrowser2:
    image: filebrowser/filebrowser
    container_name: filebrowser2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - FB_NOAUTH=True
      - FB_BASEURL=/filebrowser
      - FB_DATABASE=/config/filebrowser.db
    ports:
      - 9295:80
    volumes:
      - $DOCKER_CONFIG_PATH/filebrowser2/filebrowser.db:/config/filebrowser.db
      - $DOCKER_CONFIG_PATH/filebrowser2/.filebrowser.json:/.filebrowser.json
      - $EBOOKS_AUDIOBOOKS_PATH:/srv/ebooks_audiobooks:ro
      - $MUSIC_PATH:/srv/music:ro
      - $MOVIES_PATH:/srv/movies:ro
      - $TORRENT_PATH:/srv/torrent:ro
      - $SELF_IMPROVEMENT_PATH:/srv/self_improvement:ro
      - $GAMES_PATH:/srv/games:ro
      - $SHARE_PATH:/srv/share
    restart: always
###################3
#  h5ai:
    #image: awesometic/h5ai
    #container_name: h5ai
    #volumes:
      #- $SELF_IMPROVEMENT_PATH:/h5ai:ro
      #- $DOCKER_CONFIG_PATH/h5ai:/config
    #environment:
      #- TZ=$TZ
    #ports:
      #- 9296:80
#    restart: unless-stopped
#####################
  diun:
    image: crazymax/diun:latest
    container_name: diun
    volumes:
      - $DOCKER_CONFIG_PATH/diun/data:/data
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - TZ=$TZ
      - "LOG_LEVEL=info"
      - "LOG_JSON=false"
      - "DIUN_WATCH_WORKERS=20"
      - "DIUN_WATCH_SCHEDULE=0 */6 * * *"
      - "DIUN_PROVIDERS_DOCKER=true"
      - "DIUN_PROVIDERS_DOCKER_WATCHSTOPPED=true"
    labels:
      - "diun.enable=true"
      - "diun.watch_repo=true"
    restart: always
#######################
### nuts - tinfoiil server switch
#  nut-server:
    #container_name: nut-server
    #image: ramdockerapp/nut-server:latest
    ##build: https://github.com/eskay993/nut-server.git
    #volumes:
      #- $SWITCH_PATH:/games:ro
    #ports:
      #- 9001:9000
    #environment:
      #- ID=guest
      #- PASSWORD=guest
      #- TZ=$TZ
#    restart: always

  ownfoil:
    container_name: ownfoil
    image: a1ex4/ownfoil
    volumes:
      - $SWITCH_PATH:/games
      # Uncomment if you want to edit and persist the app configuration
      #- $DOCKER_CONFIG_PATH/ownfoil/app:/app
      # Uncomment to setup basic auth
      # - ./nginx:/etc/nginx
    ports:
      - "8001:80"
#######################
#  webtop:
    #image: ghcr.io/linuxserver/webtop:alpine-mate
    #container_name: webtop
    #environment:
       #- PUID=1000
       #- PGID=1000
       #- TZ=Asia/India
    #privileged: true
    #volumes:
       #- $DOCKER_CONFIG_PATH/webtop:/config
    #ports:
       #- 4000:3000
    #shm_size: "1gb"
#    restart: unless-stopped
#######################
#### netdata
  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: $SERVER_URL # set to fqdn of host
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PUID=1000
      - PGID=996
      - TZ=$TZ
volumes:
  netdatalib:
  netdatacache:
###################

