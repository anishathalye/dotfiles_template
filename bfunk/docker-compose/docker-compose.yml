version: "3.3"
networks:
  frontend:
    ipam:
      config:
        - subnet: $DOCKER_SUBNET_1
services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    hostname: brownfunk
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "455:80/tcp"
    environment:
      TZ: $TZ
      WEBPASSWORD: $PIHOLE_PWD
    volumes:
      - $DOCKER_CONFIG_PATH/pihole/etc/pihole/:/etc/pihole/
      - $DOCKER_CONFIG_PATH/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    networks:
      frontend:
        ipv4_address: $PIHOLE_DOCKER_SUB_IP_DNS
    restart: always
##################
  crowdsec:
    image: docker.io/crowdsecurity/crowdsec:latest
    container_name: crowdsec
    environment:
      - GID=$PGID_USER
      - COLLECTIONS=crowdsecurity/nginx crowdsecurity/http-cve crowdsecurity/whitelist-good-actors crowdsecurity/linux
      - CUSTOM_HOSTNAME=brownfunk
    volumes:
      - $DOCKER_CONFIG_PATH/crowdsec/config:/etc/crowdsec:rw
      - $DOCKER_CONFIG_PATH/crowdsec/data:/var/lib/crowdsec/data:rw
      - $DOCKER_CONFIG_PATH/swag/log/nginx:/var/log/swag:ro
      - /var/log:/var/log/host:ro
    networks:
      - frontend
    ports:
      - "8890:8080"
      - "8891:6060"
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
###################
  mariadb:
    image:  lscr.io/linuxserver/mariadb
    container_name: mariadb
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - TZ=$TZ
      - MYSQL_DATABASE=$DB_PIWIGO_SCHEMA
      - MYSQL_USER=$DB_PIWIGO_USER
      - MYSQL_PASSWORD=$DB_PIWIGO_PASS
    volumes:
      - $DOCKER_CONFIG_PATH/mariadb:/config
    ports:
      - ${DB_PORT}:3306
    restart: always
    networks:
      frontend:
  phpmyadmin:
    image: lscr.io/linuxserver/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - PMA_ARBITRARY=1
      #- PMA_ABSOLUTE_URI=https://phpmyadmin.example.com #optional
    volumes:
      - $DOCKER_CONFIG_PATH/phpmyadmin:/config
    ports:
      - 3002:80
    restart: unless-stopped
    networks:
      frontend:
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS

#  periodic-backup:
    #build: ./mariadb_bckp
    #container_name: database-backup
    #environment:
      #MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      #MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      #DB_HOST: $DB_HOST
      #DB_PORT: $DB_PORT
    #volumes:
      #- /etc/localtime:/etc/localtime:ro
      #- /opt/mysql/backup:/opt/mysql/backup
    #dns:
      #- $PIHOLE_DOCKER_SUB_IP_DNS
    #networks:
      #- frontend
    ##command: crond -f -d 8
    #command: /etc/periodic/daily/backup-database
#    restart: always
######################
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      WATCHTOWER_LABEL_ENABLE: 1
      WATCHTOWER_CLEANUP: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    command: --interval 3600
    labels:
      com.centurylinklabs.watchtower.enable: true
##################
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=${TZ}
      - UMASK=022 #optional
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/jellyfin:/config
      - ${TV_SHOWS_PATH}:/data/tvshows:ro
      - $TV_SHOWS_PATH/tubesync-downloads/video:/data/youtube:ro
      - $MOVIES_PATH:/data/movies:ro
      - $MOVIES_FR_PATH:/data/movies_french:ro
      - $MOVIES_SPORT_PATH:/data/movies_adventure_sports:ro
      - $YOGA_GLO_PATH:/data/yoga_glo:ro
      - $GUITAR_VIDEOS_PATH:/data/guitar:ro
      - /dev/dri:/dev/dri #optional
    ports:
      - 8096:8096
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    devices:
      - /dev/dri:/dev/dri #optional
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
###########################
  navidrome:
    image: deluan/navidrome
    container_name: navidrome
    user: $PUID_USER:$PGID_USER # should be owner of volumes
    ports:
      - "8082:4533"
    restart: unless-stopped
    environment:
      # Optional: put your config options customization here. Examples:
      ND_SCANINTERVAL: 1h
      ND_LOGLEVEL: info
      ND_SESSIONTIMEOUT: 24h
      ND_BASEURL: ""
      ND_AUTOIMPORTPLAYLISTS: "true"
      ND_LOGLEVEL: "trace"
      ND_RECENTLYADDEDBYMODTIME: "true"
      ND_LASTFM_APIKEY: $LASTFM_API
      ND_LASTFM_SECRET: $LASTFM_SECRET
      ND_SPOTIFY_ID: $SPOTIFY_ID
      ND_SPOTIFY_SECRET: $SPOTIFY_SECRET
      ND_ENABLETRANSCODINGCONFIG: "true"
      ND_ENABLEGRAVATAR: "true"
      WATCHTOWER_CLEANUP: "true"
    volumes:
      - $DOCKER_CONFIG_PATH/navidrome:/data
      - $MUSIC_PATH:/music:ro
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    labels:
      com.centurylinklabs.watchtower.enable: true
##################
# Audiobooks
  audiobookshelf:
    container_name: audiobookshelf
    image: ghcr.io/advplyr/audiobookshelf:latest
    ports:
      - 4040:80
    volumes:
      - $AUDIOBOOKS_PATH:/audiobooks
      - $PODCASTS_PATH:/podcasts
      - $DOCKER_CONFIG_PATH/audiobookshelf/config>:/config
      - $DOCKER_CONFIG_PATH/audiobookshelf/metadata>:/metadata
    environment:
      - TZ
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - WATCHTOWER_CLEANUP=true
    labels:
      com.centurylinklabs.watchtower.enable: true

#  gonic:
    #image: sentriz/gonic:latest
    #container_name: gonic
    #environment:
      #- TZ
      #- PUID=$PUID_USER
      #- PGID=$PGID_USER
      #- WATCHTOWER_CLEANUP=true
    #expose:
      #- 80
    #ports:
      #- "4040:80"
    #volumes:
    #- $DOCKER_CONFIG_PATH/gonic:/data                # gonic db etc
    #- $AUDIOBOOKS_PATH:/music:ro    # your music
    #- $DOCKER_CONFIG_PATH/gonic/cache:/cache       # transcode / covers / etc cache dir
    #restart: unless-stopped
    #labels:
#      com.centurylinklabs.watchtower.enable: true
######################################
  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: unless-stopped
    ports:
      - "4848:8081"
    volumes:
      - $DOCKER_CONFIG_PATH/metube/:/config
      - $MOVIES_SPORT_PATH/youtube-movies:/downloads
    environment:
      - 'YTDL_OPTIONS={"writesubtitles":true,"subtitleslangs":["en","-live_chat"],"updatetime":false,"postprocessors":[{"key":"Exec","exec_cmd":"chmod 0664","when":"after_move"},{"key":"FFmpegEmbedSubtitle","already_have_subtitle":false},{"key":"FFmpegMetadata","add_chapters":true}]}'

#  tubesync:
    #image: ghcr.io/meeb/tubesync:latest
    #depends_on:
      #- mariadb
      #- pihole
    #container_name: tubesync
    #restart: unless-stopped
    #ports:
      #- 4848:4848
    #volumes:
      #- $DOCKER_CONFIG_PATH/tubesync-config:/config
      #- $TV_SHOWS_PATH/tubesync-downloads:/downloads
    #environment:
      #- TZ=$TZ
      #- PUID=$PUID_USER
      #- PGID=$PGID_USER
      #- WATCHTOWER_CLEANUP=true
      #- DATABASE_CONNECTION=mysql://${DB_TUBESYNC_USER}:${DB_TUBESYNC_PWD}@${DB_HOST}:${DB_PORT}/${DB_TUBESYNC_SCHEMA}
    #dns:
      #- $PIHOLE_DOCKER_SUB_IP_DNS
    #networks:
      #- frontend
    #labels:
      #com.centurylinklabs.watchtower.enable: true
####
#  emulatorjs:
    #image: lscr.io/linuxserver/emulatorjs
    #container_name: emulatorjs
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=Europe/London
      #- SUBFOLDER=/ #optional
    #volumes:
      #- $DOCKER_CONFIG_PATH/emulatorjs:/config
      #- $GAMES_PATH/Nintendo/NES:/data/nes/roms:ro
      #- $GAMES_PATH/Nintendo/SNES/roms:/data/snes/roms:ro
    #ports:
      #- 3333:3000
      #- 3334:80
      #- 4001:4001 #optional
    #restart: unless-stopped
##
  calibre:
    image: linuxserver/calibre
    container_name: calibre
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=${TZ}
      - WATCHTOWER_CLEANUP=true
      #- GUAC_USER=admin
      #- GUAC_PASS=admin
    volumes:
      - $EBOOKS_PATH:/config
      - $SHARE_PATH:/share
      - $TORRENT_PATH:/torrent
    ports:
      - 7080:8080
      - 8081:8081
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
######################################
  calibre-web:
    image: linuxserver/calibre-web
    container_name: calibre-web
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/calibre-web:calibre
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/calibre-web:/config
      - $EBOOKS_PATH:/books:ro
    ports:
      - 8083:8083
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
#####################################
  homer:
    image: b4bz/homer:latest
    container_name: homer
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=${TZ}
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/homer/config.yml:/www/config.yml
      - $DOCKER_CONFIG_PATH/homer/local/assets/:/www/assets
    ports:
      - 80:8080
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
      #traefik.enable: true
      #traefik.http.routers.home.rule: Host(`home.brownfunk.lan`)
      #traefik.http.routers.home.entrypoints: web
      #traefik.http.services.home.loadbalancer.server.port: 80
    depends_on:
      - pihole
###################
  #flame:
    #image: pawelmalak/flame:latest
    #container_name: flame
    #environment:
      #- WATCHTOWER_CLEANUP=true
    #volumes:
      #- $DOCKER_CONFIG_PATH/flame:/app/data
      #- /var/run/docker.sock:/var/run/docker.sock # optional but required for Docker integration feature
    #ports:
      #- 5005:5005
    #restart: unless-stopped
    #labels:
#      com.centurylinklabs.watchtower.enable: true
#####################################
  nextcloud:
    image:  lscr.io/linuxserver/nextcloud:27.0.1-ls259
    container_name: nextcloud
    environment:
      - WATCHTOWER_CLEANUP=true
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - DOCKER_MODS=ghcr.io/linuxserver/mods:pull_request_733|linuxserver/mods:universal-package-install
      - INSTALL_PACKAGES=ffmpeg
    labels:
      - com.centurylinklabs.watchtower.enable=true
    volumes:
      - $DOCKER_CONFIG_PATH/nextcloud:/config
      - $NEXTCLOUD_DATA_PATH:/data
    ports:
      - 9393:443
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
      - mariadb
    healthcheck:
      test: curl --insecure --fail "https://brownfunk.lan:9393/login" || exit 1
      interval: 2m
      retries: 10
      start_period: 10m
      timeout: 5s
    restart: unless-stopped
#  gitea:
    #image: gitea/gitea:1.15.5
    #container_name: gitea
    #environment:
      #- USER_UID=1000
      #- USER_GID=1000
    #restart: always
    ##networks:
      #- gitea
    #volumes:
      #- $DOCKER_CONFIG_PATH/gitea:/data
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
    #ports:
      #- "3400:3000"
      #- "222:22"
    #dns:
      #- $PIHOLE_DOCKER_SUB_IP_DNS
    #networks:
#      - frontend
##################
  piwigo:
    image: linuxserver/piwigo
    # conf of DB in www/gallery/local/config/database.inc.php
    # using pihole dns. DB is setup as hostname.domain
    # helps to make sure piwigo is always pointing to the right db
    container_name: piwigo
    environment:
      - WATCHTOWER_CLEANUP=true
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - DOCKER_MODS=linuxserver/mods:universal-package-install
      - INSTALL_PACKAGES=ffmpeg
    volumes:
      - $PIWIGO_CONFIG_PATH/piwigo:/config
    ports:
      - 8282:80
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
###################
  php_piwigo_slideshow:
    container_name: php_piwigo_slideshow
    image: php:7.4-apache
    ports:
      - 5671:80
    environment:
      - WATCHTOWER_CLEANUP=true
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
    volumes:
      - $DOCKER_CONFIG_PATH/php_piwigo_slideshow:/var/www/html/
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
    restart: unless-stopped
####################
  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    depends_on:
      - mariadb
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    # Run as a specific, non-root user (see https://docs.docker.com/engine/reference/run/#user):
    user: "$PUID_USER:$PGID_USER"
    ports:
      - "2342:2342" # [server]:[container]
    environment:
      WATCHTOWER_CLEANUP: "true"
      PHOTOPRISM_ADMIN_PASSWORD: "insecure"          # PLEASE CHANGE: Your initial admin password (min 4 characters)
      PHOTOPRISM_SITE_URL: "http://$DB_HOST:2342/"  # Public URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # File size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # Improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DEBUG: "false"                      # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "false"                     # No authentication required (disables password protection)
      PHOTOPRISM_READONLY: "true"                   # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # Enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "true"              # Disables storage permission updates on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # Disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # Disables Settings in Web UI
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # Disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # Disables facial recognition
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # Disables image classification
      PHOTOPRISM_DARKTABLE_PRESETS: "true"          # Enables Darktable presets and disables concurrent RAW conversion
      PHOTOPRISM_DETECT_NSFW: "false"                # Flag photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # Allow uploads that MAY be offensive
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # Use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "$DB_HOST:$DB_PORT"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "$DB_PHOTOPRISM_SCHEMA"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "$DB_PHOTOPRISM_USER"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "$DB_PHOTOPRISM_PWD"      # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "Browse Your Life"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: "Loz"
      # Set a non-root user, group, or custom umask if your Docker environment doesn't support this natively:
      PHOTOPRISM_UID: $PUID_USER
      PHOTOPRISM_GID: $PGID_USER
      # PHOTOPRISM_UMASK: 0000
      # Enable TensorFlow AVX2 support for modern Intel CPUs (requires starting the container as root):
      # PHOTOPRISM_INIT: "tensorflow-amd64-avx2"
      # Hardware video transcoding options:
      # PHOTOPRISM_FFMPEG_BUFFERS: "64"              # FFmpeg capture buffers (default: 32)
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_v4l2m2m"    # Use Video4Linux for AVC transcoding (default: libx264)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_qsv"        # Use Intel Quick Sync Video for AVC transcoding (default: libx264)
      # PHOTOPRISM_INIT: "intel-graphics tensorflow-amd64-avx2" # Enable TensorFlow AVX2 & Intel Graphics support
      HOME: "/photoprism"
    # Optional hardware devices for video transcoding and machine learning:
    devices:
    #  - "/dev/video11:/dev/video11" # Video4Linux (h264_v4l2m2m)
      - "/dev/dri/renderD128:/dev/dri/renderD128" # Intel GPU
    #  - "/dev/dri/card0:/dev/dri/card0"
    working_dir: "/photoprism"
    volumes:
      # The *originals* folder contains your original photo and video files (- "[host folder]:/photoprism/originals"):
      - "$PICTURES_PATH/photoprism:/photoprism/originals"
      # Multiple folders can be made accessible by mounting them as subfolders of /photoprism/originals:
      # - "/mnt/Family:/photoprism/originals/Family"    # [folder 1]:/photoprism/originals/[folder 1]
      # - "/mnt/Friends:/photoprism/originals/Friends"  # [folder 2]:/photoprism/originals/[folder 2]
      # You may mount an *import* folder from which files can be transferred to *originals* (optional):
      # - "~/Import:/photoprism/import"
      # Cache, session, thumbnail, and sidecar files will be created in the *storage* folder (never remove):
      - "$PICTURES_PATH/docker_photoprism/storage:/photoprism/storage"
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    labels:
      com.centurylinklabs.watchtower.enable: true
##########################
  darktable:
    image: lscr.io/linuxserver/darktable
    container_name: darktable
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
    volumes:
      - $DOCKER_CONFIG_PATH/darktable:/config
      - $PICTURES_PATH:/pictures
    ports:
      - 3030:3000
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
##########################
  glance:
    image: nicolargo/glances:latest-alpine
    container_name: glances
    restart: unless-stopped
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - "GLANCES_OPT=-w"
    ports:
      - 61208:61208
    labels:
      com.centurylinklabs.watchtower.enable: true
###############
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - UMASK_SET=022 #optional
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/lidarr:/config
      - $MUSIC_PATH:/music
      - $TORRENT_PATH:/data
      - $TORRENT_PATH/LIDARR_DL:/data/LIDARR_DL
    ports:
      - 8686:8686
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
    restart: "no"
    labels:
      com.centurylinklabs.watchtower.enable: true
#############
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - UMASK=022 #optional
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/radarr:/config
      - $MOVIES_ENG_PATH:/movies
      - $TORRENT_PATH/movies:/downloads
      - $TORRENT_PATH/movies:/data/completed
    ports:
      - 7878:7878
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
#######################
  radarr_fr:
    image: linuxserver/radarr
    container_name: radarr_fr
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - UMASK=022 #optional
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/radarr_fr:/config
      - $MOVIES_FR_PATH:/movies
      - $TORRENT_PATH/completed:/downloads
      - $TORRENT_PATH/completed:/data/completed
    ports:
      - 7879:7878
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
##########################
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - UMASK=022 #optional
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/sonarr:/config
      - ${TV_SHOWS_PATH}:/tv
      - $TORRENT_PATH/shows:/downloads
      - $TORRENT_PATH/shows:/data/completed
    ports:
      - 8989:8989
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
#####################
# Handbrake
  handbrake:
    image: jlesage/handbrake
    container_name: handbrake
    volumes:
      - $DOCKER_CONFIG_PATH/handbrake:/config:rw
      - $GUITAR_VIDEOS_PATH:/videos:rw
      - $SELF_IMPROVEMENT_PATH/sailing:/videos2:rw
      - $MUSIC_LEARNING_VIDEOS_PATH:/videos3:rw
    ports:
      - "5800:5800"

  tinymediamanager:
    #image: romancin/tinymediamanager:latest-v4
    image: romancin/tinymediamanager:latest
    container_name: tinymediamanager
    ports:
      - "5803:5800"
    environment:
      - USER_ID=0
      - GROUP_ID=0
      - TZ=Europe/Madrid
      - VNC_PASSWORD=password
    volumes:
      - "$DOCKER_CONFIG_PATH/tinymediamanager:/config:rw"
      - "$GUITAR_VIDEOS_PATH:/media:rw"
######################
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - AUTO_UPDATE=true #optional
      - WATCHTOWER_CLEANUP=true
      #- RUN_OPTS=run options here #optional
    volumes:
      - $DOCKER_CONFIG_PATH/jackett:/config
      - $TORRENT_PATH:/downloads
    ports:
      - 9117:9117
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
      - flaresolverr
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true

    #image: lscr.io/linuxserver/prowlarr:1.7.4.3769-ls26
    #image: lscr.io/linuxserver/prowlarr:1.6.3.3608-ls25
  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - AUTO_UPDATE=true #optional
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/prowlarr:/config
    ports:
      - 9696:9696
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped
####################
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - WATCHTOWER_CLEANUP=true
    dns:
      - 172.19.0.3
    depends_on:
      - pihole
    ports:
      - 8191:8191
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
###############
# flexget
 # flexget:
    #image: wiserain/flexget
    #container_name: flexget
    #environment:
      #- PUID=$PUID_USER
      #- PGID=$PGID_USER
      #- TZ=$TZ
      #- FG_WEBUI_PASSWD=dontstealthepwd
    #ports:
      #- 5050:5050
    #volumes:
      #- $DOCKER_CONFIG_PATH/flexget:/config
#################
  #syncthing:
    #image: ghcr.io/linuxserver/syncthing
    #container_name: syncthing
    #hostname: syncthing #optional
    #environment:
      #- PUID=$PUID_USER
      #- PGID=$PGID_USER
      #- TZ=Europe/London
    #volumes:
      #- $DOCKER_CONFIG_PATH/syncthing:/config
      #- /export/share/share:/data1
    #ports:
      #- 8384:8384
      #- 22000:22000/tcp
      #- 22000:22000/udp
      #- 21027:21027/udp
    #restart: unless-stopped
##
#
  pyload:
    image: linuxserver/pyload-ng
    container_name: pyload
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
    volumes:
      - $DOCKER_CONFIG_PATH/pyload:/config
      - $TORRENT_PATH/PYLOAD:/downloads
    ports:
      - 8000:8000
      - 7227:7227 #optional
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
#######################
  transmission:
   image: haugene/transmission-openvpn
   container_name: transmission
   cap_add:
     - NET_ADMIN
   devices:
     - /dev/net/tun
   restart: always
   ports:
     - "9091:9091"
     - "8888:8888"
   dns:
     - $PIHOLE_DOCKER_SUB_IP_DNS
     - 8.8.8.8
     - 8.8.4.4
   volumes:
     - /etc/localtime:/etc/localtime:ro
     - $TORRENT_PATH:/data
     - $TORRENT_PATH:/config
   logging:
     driver: json-file
     options:
       max-size: 10m
   environment:
     - CREATE_TUN_DEVICE=true
     - WEBPROXY_ENABLED=false
     - TRANSMISSION_WEB_UI=transmission-web-control
     - TRANSMISSION_INCOMPLETE_DIR=/data/transmission/incomplete
     - TRANSMISSION_INCOMPLETE_DIR_ENABLED=true
     - TRANSMISSION_BLOCKLIST_ENABLED=true
     - TRANSMISSION_BLOCKLIST_URL=$TRANSMISSION_BLOCKLIST_URL
     - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=false
     - DISABLE_PORT_UPDATER=true
     - OPENVPN_PROVIDER=PIA
     - OPENVPN_CONFIG=au_sydney
     - OPENVPN_USERNAME=$PIA_USERNAME
     - OPENVPN_PASSWORD=$PIA_PASSWORD
     - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
     - LOCAL_NETWORK=$LOCAL_NETWORK
   restart: unless-stopped
#########
#  apaxy:
    #image: apaxy
    #container_name: apaxy
    #build:
      #context: apaxy
      #args:
        #apaxyPath: ''
    #ports:
        #- '3321:8080'
    #volumes:
      #- $SERVER_PATH:/usr/local/apache2/htdocs/share/:ro
#    restart: unless-stopped
#############
# to store icons for organizr help page
  tecmint-web:
    container_name: web-server
    image: httpd:2.4
    ports:
      - 1021:80
    volumes:
      - $DOCKER_CONFIG_PATH/howto:/usr/local/apache2/htdocs/
    restart: unless-stopped
#####################
## tinymediamanager - filebot replacement
 # tinymediamanager:
    #image: romancin/tinymediamanager:latest
    #container_name: tinymediamanager
    #environment:
      #- PUID=$PUID_USER
      #- PGID=$PGID_USER
      #- TZ=$TZ
    #volumes:
      #- $DOCKER_CONFIG_PATH/tmm:/config
      #- $TORRENT_PATH/completed:/media
    #ports:
      #- 5700:5800
      #- 5900:5900
 #   restart: unless-stopped
################
####### notes
  hedgedoc:
    image: ghcr.io/linuxserver/hedgedoc:latest
    container_name: hedgedoc
    restart: always
    depends_on:
      - mariadb
    volumes:
      - $DOCKER_CONFIG_PATH/codimd:/config
    environment:
      - DB_HOST=$DB_HOST
      - DB_USER=$DB_CODIMD_USER
      - DB_PASS=$DB_CODIMD_PASS
      - DB_NAME=$DB_CODIMD_SCHEMA
      - CMD_DOMAIN=$DB_HOST
      - CMD_URL_ADDPORT=true
      - DB_PORT=$DB_PORT
      - PGID=$PGID_USER
      - PUID=$PUID_USER
      - TZ=$TZ
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
      - mariadb
    restart: unless-stopped
    ports:
      - "3000:3000"

  trilium:
    image: zadam/trilium
    container_name: trilium
    restart: always
    volumes:
      - $DOCKER_CONFIG_PATH/trilium:/home/node/trilium-data
    environment:
      - USER_UID=$PUID_USER
      - USER_GID=$PGID_USER
    ports:
      - 8080:8080
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
################
########## get server ip to duckdns
  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    dns: 1.1.1.1
    environment:
      - PUID=$PUID_USER #optional
      - PGID=$PGID_USER #optional
      - TZ=$TZ
      - SUBDOMAINS=$DUCKDNS_DOMAIN
      - TOKEN=$DUCKDNS_TOKEN
      - LOG_FILE=false #optional
    volumes:
      - $DOCKER_CONFIG_PATH/duckdns:/config #optional
    restart: always
#####################
# SWAG from duckdns
####################
  swag:
   image: ghcr.io/linuxserver/swag
   container_name: swag
   cap_add:
     - NET_ADMIN
   dns:
     - $PIHOLE_DOCKER_SUB_IP_DNS
   networks:
     - frontend
   environment:
     - PUID=$PUID_USER
     - PGID=$PGID_USER
     - TZ=Europe/Brussels
     - URL=$DUCKDNS_DOMAIN.duckdns.org
     - SUBDOMAINS=wildcard
     - VALIDATION=duckdns
     #- DNSPLUGIN=cloudflare
     #- CERTPROVIDER= #optional
     #- DNSPLUGIN= #optional
     - DUCKDNSTOKEN=$DUCKDNS_TOKEN
     #- EMAIL=<e-mail> #optional
     - ONLY_SUBDOMAINS=false #optional
     #- DOCKER_MODS=linuxserver/mods:swag-crowdsec
     #- EXTRA_DOMAINS=brownfunk.lan #optional
     - STAGING=false #optional
     - DOCKER_MODS=ghcr.io/linuxserver/mods:swag-crowdsec
     - CROWDSEC_API_KEY=${CROWDSEC_SWAG_API_KEY}
     - CROWDSEC_LAPI_URL=http://crowdsec:8080
   volumes:
     - $DOCKER_CONFIG_PATH/swag:/config
   ports:
     - 443:443
     - 555:80
   restart: unless-stopped
##############
#  reverse-proxy:
    ## The official v2 Traefik docker image
    #image: traefik:latest
    #container_name: traefik
    ## Enables the web UI and tells Traefik to listen to docker
    #hostname: brownfunk
    #domainname: brownfunk.lan
    #command:
      #- "--api.insecure=true"
      #- "--providers.docker=true"
      #- "--entrypoints.web.address=:80"
    #ports:
      ## The HTTP port
      #- "81:80"
      ## The Web UI (enabled by --api.insecure=true)
      #- "8087:8080"
    #volumes:
      ## So that Traefik can listen to the Docker events
      #- /var/run/docker.sock:/var/run/docker.sock
    #dns:
      #- $PIHOLE_DOCKER_SUB_IP_DNS
    #labels:
      #- traefik.enable=true
      #- traefik.docker.network=web
      #- traefik.http.routers.traefik.rule=Host(`traefik.brownfunk.lan`)
      #- traefik.http.routers.traefik.entrypoints=http
      #- traefik.http.services.traefik.loadbalancer.server.port=8087

################3
  ldap-auth:
    image: lscr.io/linuxserver/ldap-auth
    container_name: ldap-auth
    environment:
      - TZ=$TZ
      #- F#ERNETKEY= #optional
      #- CERTFILE= #optional
      #- KEYFILE= #optional
    ports:
      - 8899:8888
      - 9900:9000
    restart: unless-stopped
####################
### Wallabag
  wallabag:
    image: wallabag/wallabag
    container_name: wallabag
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
      - redis
      - mariadb
    ports:
      - 3637:80
    volumes:
      - $DOCKER_CONFIG_PATH/wallabag/var/www/wallabag/data:/var/www/wallabag/data
      - $DOCKER_CONFIG_PATH/wallabag/opt/wallabag/images:/var/www/wallabag/web/assets/images
    restart: unless-stopped
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
      - SYMFONY__ENV__DOMAIN_NAME=$SERVER_URL:3637
      #- SYMFONY__ENV__DATABASE_HOST=172.20.0.17
    links:
      - redis
    labels:
      com.centurylinklabs.watchtower.enable: true
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379
    restart: unless-stopped
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - WATCHTOWER_CLEANUP=true
      - TZ=$TZ
    labels:
      com.centurylinklabs.watchtower.enable: true
##########
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    environment:
      - WATCHTOWER_CLEANUP=true
    ports:
      - 6767:8000
      - 6263:9000
      - 9443:9433
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKER_CONFIG_PATH/portainer:/data
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
###########
  wordpress:
    image: wordpress:5-php7.4-apache
    #image: wordpress:6.2.0-php8.2-apache
    container_name: wordpress
    ports:
       - 5555:80
    restart: always
    depends_on:
      - mariadb
      - pihole
    environment:
      WORDPRESS_DB_HOST: $DB_WP_URL
      WORDPRESS_DB_USER: $DB_WP_USER
      WORDPRESS_DB_PASSWORD: $DB_WP_PASS
      WORDPRESS_DB_NAME: $DB_WP_SCHEMA
      # should be set as www-data:www-data
      PUID: 1000
      PGID: 1000
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    depends_on:
      - pihole
      - mariadb
    restart: unless-stopped
    volumes:
       - $DOCKER_CONFIG_PATH/wordpress:/var/www/html
###########
  wordpress_diary:
    #image: wordpress:latest
    image: wordpress:6.2.0-php8.2-apache
    container_name: wordpress_diary
    ports:
       - 5556:80
    restart: always
    depends_on:
      - mariadb
      - pihole
    environment:
      WORDPRESS_DB_HOST: $DB_WP_URL
      WORDPRESS_DB_USER: $DB_WP_USER
      WORDPRESS_DB_PASSWORD: $DB_WP_PASS
      WORDPRESS_DB_NAME: $DB_WP_DIARY_SCHEMA
      WATCHTOWER_CLEANUP: "true"
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    restart: unless-stopped
    volumes:
       - $DOCKER_CONFIG_PATH/wordpress_diary:/var/www/html
    labels:
      com.centurylinklabs.watchtower.enable: true
#########################
### bazarr
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
      - UMASK_SET=022 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/bazarr:/config
      - $MOVIES_ENG_PATH:/movies
      - $TV_SHOWS_PATH:/tv
    depends_on:
      - pihole
    ports:
      - 6768:6767
    labels:
      com.centurylinklabs.watchtower.enable: true
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    networks:
      - frontend
    restart: unless-stopped
###################
  searx:
    image: searx/searx
    container_name: searx
    volumes:
      - $DOCKER_CONFIG_PATH/searx:/etc/searx
    ports:
      - 9324:8080
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
###################

###############
  komga:
    image: gotson/komga
    container_name: komga
    volumes:
      - type: bind
        source: $DOCKER_CONFIG_PATH/komga
        target: /config
      - type: bind
        source: $COMICS_PATH/
        target: /books
        read_only: true
      - type: bind
        source: $MAGAZINES_PATH/
        target: /magazines
        read_only: true
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
        read_only: true
    ports:
      - 9981:25600
    user: "$PUID_USER:$PGID_USER"
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx6g
      - KOMGA_LIBRARIES_SCAN_STARTUP=false
      - KOMGA_LIBRARIES_SCAN_CRON=0 0 */4 * * ?
      - WATCHTOWER_CLEANUP=true
    restart: always
    networks:
      - frontend
    labels:
      com.centurylinklabs.watchtower.enable: true
#########################
#### wireguard
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - SERVERURL=${DUCKDNS_DOMAIN}.duckdns.org
      - SERVERPORT=51820 #optional
      - PEERS=$WG2_PEERS #optional
      - PEERDNS=auto #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/wireguard/config:/config
      - /lib/modules:/lib/modules
      - /usr/src/:/usr/src
    ports:
      - 51820:51820/udp
    #sysctls:
      #- net.ipv4.conf.all.src_valid_mark=1
    restart: always
#### wireguard
  wireguard2:
    image: linuxserver/wireguard
    container_name: wireguard2
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - SERVERURL=${DUCKDNS_DOMAIN}.duckdns.org
      - SERVERPORT=51821 #optional
      - PEERS=$WG2_PEERS #optional
      - PEERDNS=$PIHOLE_DOCKER_SUB_IP_DNS #using pihole docker, default port is 53, which is dsn by default # docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' pihole
      - INTERNAL_SUBNET=10.13.13.0 #optional
    volumes:
      - $DOCKER_CONFIG_PATH/wireguard2/config:/config
      - /lib/modules:/lib/modules
      - /usr/src/:/usr/src
    depends_on:
      - pihole
    ports:
      - 51821:51820/udp
    networks:
      - frontend
    #sysctls:
      #- net.ipv4.conf.all.src_valid_mark=1
    restart: always
############################
# doc on https://github.com/kylemanna/docker-openvpn/blob/master/docs/docker-compose.md
  openvpn:
    cap_add:
     - NET_ADMIN
    image: kylemanna/openvpn
    container_name: openvpn
    ports:
     - "1194:1194/udp"
    restart: always
    volumes:
     - $DOCKER_CONFIG_PATH/openvpn-data/conf:/etc/openvpn
######################
# rsync server
  rsync-server:
    image: quentintin/rsync-server
    container_name: rsync-server
    volumes:
      - $HOME/.ssh/id_rsa.pub:/root/.ssh/authorized_keys
      - $EBOOKS_AUDIOBOOKS_PATH:/data/ebooks_audiobooks:ro
      - $EBOOKS_FR_PATH:/data/ebooks_fr:ro
      - $GAMES_PATH:/data/games:ro
      - $MOVIES_PATH:/data/movies:ro
      - $MOVIES_FR_PATH:/data/Movies(French):ro
      - $MOVIES_SPORT_PATH:/data/Sport:ro
      - $TV_SHOWS_PATH:/data/TV Shows:ro
      - $MUSIC_ROOT_PATH:/data/music:ro
      - $PICTURES_PATH:/data/pictures:ro
      - $PIWIGO_CONFIG_PATH/piwigo/www/gallery/upload:/data/pictures_piwigo:ro
      - $SHARE_PATH:/data/share:ro
      - $TORRENT_PATH:/data/torrent:ro
      - $SELF_IMPROVEMENT_PATH:/data/self_improvement:ro
      - $PODCASTS_PATH:/data/podcasts:ro
      - $DOCKER_CONFIG_PATH:/data/docker:ro
      - $NEXTCLOUD_DATA_PATH:/data/nextcloud:ro
    environment:
      #- USERNAME=nouser
      #- PASSWORD=nopass
      PUID: $PUID_USER
      PGID: $PGID_USER
    ports:
      #- "873:873" #uncomment if want to use rsyncd
      - "9000:22"
    restart: always
#######################
# Samba
  samba:
    image: dperson/samba
    container_name: samba
    environment:
      TZ: $TZ
      PUID: $PUID_USER
      PGID: $PGID_USER
    ports:
      - "139:139/tcp"
      - "445:445/tcp"
    read_only: true
    tmpfs:
      - /tmp
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - $EBOOKS_AUDIOBOOKS_PATH:/share1:ro
      - $GAMES_PATH:/share2:ro
      - $MOVIES_PATH:/share3:ro
      - $MUSIC_PATH:/share4:ro
      - $PICTURES_PATH:/share5
      - $SHARE_PATH:/share6
      - $TORRENT_PATH:/share7:ro
      - $SELF_IMPROVEMENT_PATH:/share8:ro
      - $PODCASTS_PATH:/share9:ro
    command: |
      -s "Ebooks;/share1;yes;yes;yes;all;none;$USER;ebooks share ro"
      -s "Games;/share2;yes;yes;yes;all;none;$USER;games share ro"
      -s "Movies;/share3;yes;yes;yes;all;none;$USER;movies share ro"
      -s "Music;/share4;yes;yes;yes;all;none;$USER;music share ro"
      -s "Pictures;/share5;yes;no;no;$USER;$USER;$USER;pictures ro except user"
      -s "Shared;/share6;yes;no;yes;guest,$USER;guest,$USER;guest,$USER;shared rw"
      -s "Torrent;/share7;yes;yes;yes;all;none;$USER;torrent share ro"
      -s "Self Improvement;/share8;yes;yes;yes;all;none;$USER;Self Improvement share ro"
      -s "Podcasts;/share9;yes;yes;yes;all;none;$USER;Podcasts share ro"
      -u "$USER;$SAMBA_PASSWORD"
      -u "guest;guest"
      -g "map to guest = Bad User"
      -g "guest account = nobody"
#######################
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    environment:
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - FB_NOAUTH=True
      - FB_BASEURL=/filebrowser
      - FB_DATABASE=/config/filebrowser.db
      - WATCHTOWER_CLEANUP=true
    ports:
      - 9295:80
    volumes:
      - $DOCKER_CONFIG_PATH/filebrowser/database:/database
      - $DOCKER_CONFIG_PATH/filebrowser/config:/config
      - $EBOOKS_AUDIOBOOKS_PATH:/srv/ebooks_audiobooks:ro
      - $MUSIC_PATH:/srv/music:ro
      - $MOVIES_PATH:/srv/movies:ro
      - $TORRENT_PATH:/srv/torrent:ro
      - $SELF_IMPROVEMENT_PATH:/srv/self_improvement:ro
      - $GAMES_PATH:/srv/games:ro
      - $SHARE_PATH:/srv/share
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
###################3
#  h5ai:
    #image: awesometic/h5ai
    #container_name: h5ai
    #volumes:
      #- $SELF_IMPROVEMENT_PATH:/h5ai:ro
      #- $DOCKER_CONFIG_PATH/h5ai:/config
    #environment:
      #- TZ=$TZ
    #ports:
      #- 9296:80
#    restart: unless-stopped
#####################
#  diun:
    #image: crazymax/diun:latest
    #container_name: diun
    #volumes:
      #- $DOCKER_CONFIG_PATH/diun/data:/data
      #- "/var/run/docker.sock:/var/run/docker.sock"
    #environment:
      #- TZ=$TZ
      #- "LOG_LEVEL=info"
      #- "LOG_JSON=false"
      #- "DIUN_WATCH_WORKERS=20"
      #- "DIUN_WATCH_SCHEDULE=0 */6 * * *"
      #- "DIUN_PROVIDERS_DOCKER=true"
      #- "DIUN_PROVIDERS_DOCKER_WATCHSTOPPED=true"
    #labels:
      #- "diun.enable=true"
      #- "diun.watch_repo=true"
#    restart: always
#######################
  firefox:
    image: lscr.io/linuxserver/firefox:latest
    container_name: firefox
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - $DOCKER_CONFIG_PATH/firefox:/config
    ports:
      - 3008:3000
    shm_size: "1gb"
    restart: unless-stopped

############
#  sheetable:
    #container_name: sheetable
    #restart: unless-stopped
    #image: vallezw/sheetable
    #ports:
      #- 8780:8080
    #environment:
      #- CONFIG_PATH=/app/config/
    #volumes:
      #- /etc/localtime:/etc/localtime:ro
      #- $DOCKER_CONFIG_PATH/sheetable:/app/config
    #networks:
      #frontend:
    #dns:
      #- $PIHOLE_DOCKER_SUB_IP_DNS
    #labels:
#      com.centurylinklabs.watchtower.enable: true

###############
  ownfoil:
    container_name: ownfoil
    image: a1ex4/ownfoil
    volumes:
      - $SWITCH_PATH:/games
      # Uncomment if you want to edit and persist the app configuration
      #- $DOCKER_CONFIG_PATH/ownfoil2/app:/app
      #- $DOCKER_CONFIG_PATH/ownfoil2/nginx:/etc/nginx
      # - ./app:/app
      # Uncomment to setup basic auth
      #- ./nginx:/etc/nginx
    restart: unless-stopped
    ports:
      - "8001:80"
    networks:
      frontend:
    dns:
      - $PIHOLE_DOCKER_SUB_IP_DNS
    labels:
      com.centurylinklabs.watchtower.enable: true
#######################
#  webtop:
    #image: ghcr.io/linuxserver/webtop:alpine-mate
    #container_name: webtop
    #environment:
       #- PUID=$PUID_USER
       #- PGID=$PGID_USER
       #- TZ=Asia/India
    #privileged: true
    #volumes:
       #- $DOCKER_CONFIG_PATH/webtop:/config
    #ports:
       #- 4000:3000
    #shm_size: "1gb"
#    restart: unless-stopped
#
  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
    ports:
      - "8033:8080" # webapp
      - "8086:8086" # influxDB admin
    volumes:
      - /run/udev:/run/udev:ro
      - $DOCKER_CONFIG_PATH/scrutiny/config:/opt/scrutiny/config
      - $DOCKER_CONFIG_PATH/scrutiny/influxdb:/opt/scrutiny/influxdb
    devices:
      - "/dev/sda"
      - "/dev/sdh"
      - "/dev/sdg"
      - "/dev/sdi"
      - "/dev/sdf"
    environment:
      - COLLECTOR_CRON_SCHEDULE="*/5 * * * *"
      - PUID=$PUID_USER
      - PGID=$PGID_USER
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped
#######################
#### netdata
  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: $SERVER_URL # set to fqdn of host
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PUID=$PUID_USER
      - PGID=996
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
    labels:
      com.centurylinklabs.watchtower.enable: true
volumes:
  netdatalib:
  netdatacache:
###################

